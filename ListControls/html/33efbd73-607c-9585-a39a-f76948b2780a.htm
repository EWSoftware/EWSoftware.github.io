<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>DrawTreeNodeExtendedEventArgs Constructor </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="DrawTreeNodeExtendedEventArgs class, constructor" /><meta name="System.Keywords" content="DrawTreeNodeExtendedEventArgs.DrawTreeNodeExtendedEventArgs constructor" /><meta name="Microsoft.Help.F1" content="EWSoftware.ListControls.DrawTreeNodeExtendedEventArgs.#ctor" /><meta name="Microsoft.Help.F1" content="EWSoftware.ListControls.DrawTreeNodeExtendedEventArgs.DrawTreeNodeExtendedEventArgs" /><meta name="Microsoft.Help.Id" content="M:EWSoftware.ListControls.DrawTreeNodeExtendedEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Windows.Forms.TreeNodeStates,System.Drawing.Rectangle)" /><meta name="Description" content="Constructor" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="EWSoftware.ListControls" /><meta name="file" content="33efbd73-607c-9585-a39a-f76948b2780a" /><meta name="guid" content="33efbd73-607c-9585-a39a-f76948b2780a" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">EWSoftware.ListControls Library Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ca3b503d-654e-4fe6-8ca3-ec3ea8fb9a1a.htm" title="EWSoftware.ListControls Library Documentation" tocid="roottoc">EWSoftware.ListControls Library Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/ab9eccdf-8f8d-ac48-e88d-b334ab7b4d49.htm" title="EWSoftware.ListControls" tocid="ab9eccdf-8f8d-ac48-e88d-b334ab7b4d49">EWSoftware.ListControls</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/cf9fb0c5-95a1-857b-561f-1edb09d1b8b3.htm" title="DrawTreeNodeExtendedEventArgs Class" tocid="cf9fb0c5-95a1-857b-561f-1edb09d1b8b3">DrawTreeNodeExtendedEventArgs Class</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="33efbd73-607c-9585-a39a-f76948b2780a.htm" title="DrawTreeNodeExtendedEventArgs Constructor " tocid="33efbd73-607c-9585-a39a-f76948b2780a">DrawTreeNodeExtendedEventArgs Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a3e7a24c-db80-2131-3225-855e37579c2d.htm" title="DrawTreeNodeExtendedEventArgs Properties" tocid="a3e7a24c-db80-2131-3225-855e37579c2d">DrawTreeNodeExtendedEventArgs Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ec306da6-2853-eb55-0741-6558a28940c9.htm" title="DrawTreeNodeExtendedEventArgs Methods" tocid="ec306da6-2853-eb55-0741-6558a28940c9">DrawTreeNodeExtendedEventArgs Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>DrawTreeNodeExtendedEventArgs Constructor </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Constructor
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="ab9eccdf-8f8d-ac48-e88d-b334ab7b4d49.htm">EWSoftware.ListControls</a><br />
    <strong>Assembly:</strong>
   EWSoftware.ListControls (in EWSoftware.ListControls.dll) Version: 2015.1.27.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">DrawTreeNodeExtendedEventArgs</span>(
	<span class="identifier">Graphics</span> <span class="parameter">g</span>,
	<span class="identifier">TreeNode</span> <span class="parameter">treeNode</span>,
	<span class="identifier">TreeNodeStates</span> <span class="parameter">nodeState</span>,
	<span class="identifier">Rectangle</span> <span class="parameter">bounds</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( 
	<span class="parameter">g</span> <span class="keyword">As</span> <span class="identifier">Graphics</span>,
	<span class="parameter">treeNode</span> <span class="keyword">As</span> <span class="identifier">TreeNode</span>,
	<span class="parameter">nodeState</span> <span class="keyword">As</span> <span class="identifier">TreeNodeStates</span>,
	<span class="parameter">bounds</span> <span class="keyword">As</span> <span class="identifier">Rectangle</span>
)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">DrawTreeNodeExtendedEventArgs</span>(
	<span class="identifier">Graphics</span>^ <span class="parameter">g</span>, 
	<span class="identifier">TreeNode</span>^ <span class="parameter">treeNode</span>, 
	<span class="identifier">TreeNodeStates</span> <span class="parameter">nodeState</span>, 
	<span class="identifier">Rectangle</span> <span class="parameter">bounds</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">new</span> : 
        <span class="parameter">g</span> : <span class="identifier">Graphics</span> * 
        <span class="parameter">treeNode</span> : <span class="identifier">TreeNode</span> * 
        <span class="parameter">nodeState</span> : <span class="identifier">TreeNodeStates</span> * 
        <span class="parameter">bounds</span> : <span class="identifier">Rectangle</span> <span class="keyword">-&gt;</span> <span class="identifier">DrawTreeNodeExtendedEventArgs</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">g</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/ac148eb3" target="_blank">System.Drawing<span id="LSTB6363A26_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6363A26_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Graphics</a><br />The graphics object to use</dd><dt><span class="parameter">treeNode</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/bctbxtcb" target="_blank">System.Windows.Forms<span id="LSTB6363A26_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6363A26_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TreeNode</a><br />The tree node to draw</dd><dt><span class="parameter">nodeState</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/2yw4tc1d" target="_blank">System.Windows.Forms<span id="LSTB6363A26_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6363A26_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TreeNodeStates</a><br />The current node state</dd><dt><span class="parameter">bounds</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/1zk39146" target="_blank">System.Drawing<span id="LSTB6363A26_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB6363A26_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Rectangle</a><br />The node's bounds</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EADABA_tab1" class="codeSnippetContainerTabSingle">C# - TreeNodeDrawing Event Handler Example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EADABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EADABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EADABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Test TreeNodeDrawing event handler.  This occurs before the tree</span>
<span class="highlight-comment">/// view draws the node.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="sender"&gt;The sender of the event&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> tvExtTree_TreeNodeDrawing(<span class="highlight-keyword">object</span> sender, DrawTreeNodeExtendedEventArgs e)
{
    <span class="highlight-keyword">if</span>(!chkFormDrawNode.Checked)
        <span class="highlight-keyword">return</span>;

    <span class="highlight-comment">// Use solid 2px lines</span>
    e.LinePen.DashStyle = DashStyle.Solid;
    e.LinePen.Width = <span class="highlight-number">2</span>;

    <span class="highlight-comment">// Change the text by adding the node name.  Assigning new text</span>
    <span class="highlight-comment">// automatically recalculates the text and focus bounds. We could</span>
    <span class="highlight-comment">// draw the text, but we'll let the base class handle it. Note that</span>
    <span class="highlight-comment">// since the tree view doesn't know about the extra text, it won't</span>
    <span class="highlight-comment">// show the horizontal scrollbar if it goes off the right edge.</span>
    e.Text += <span class="highlight-literal">" ("</span> + e.Node.Name + <span class="highlight-literal">")"</span>;

    <span class="highlight-comment">// If the item height is larger than 35, wrap the text too</span>
    <span class="highlight-keyword">if</span>(tvExtTree.ItemHeight &gt; <span class="highlight-number">35</span>)
    {
        e.StringFormat.FormatFlags = StringFormatFlags.NoClip;

        <span class="highlight-comment">// Limit the text to the right edge of the node bounds.  Note</span>
        <span class="highlight-comment">// that this won't stop the tree view from showing a horizontal</span>
        <span class="highlight-comment">// scrollbar.</span>
        e.TextBounds = <span class="highlight-keyword">new</span> Rectangle(e.TextBounds.Left, e.NodeBounds.Top,
            e.NodeBounds.Width - e.TextBounds.Left, e.NodeBounds.Height);
    }

    <span class="highlight-comment">// NOTE:</span>
    <span class="highlight-comment">// If you choose to draw one or more parts of the node, you should</span>
    <span class="highlight-comment">// draw the background first, then the node parts, and then turn</span>
    <span class="highlight-comment">// off the NodeParts.Background flag along with the other node part</span>
    <span class="highlight-comment">// flags in the e.NodeParts property before returning.</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EADABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACABA_tab1" class="codeSnippetContainerTabSingle">C# - TreeNodeDrawn Event Handler Example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// Test TreeNodeDrawn event handler.  This occurs after the tree view</span>
<span class="highlight-comment">/// has drawn the node.</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="sender"&gt;The sender of the event&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> tvExtTree_TreeNodeDrawn(<span class="highlight-keyword">object</span> sender, DrawTreeNodeExtendedEventArgs e)
{
    Pen pen;
    <span class="highlight-keyword">int</span> top;

    <span class="highlight-keyword">if</span>(chkFormDrawNode.Checked &amp;&amp; e.Node.Level == <span class="highlight-number">0</span> &amp;&amp; e.ImageIndex != <span class="highlight-number">-1</span>)
    {
        <span class="highlight-comment">// Nothing exciting, we'll just draw a line through</span>
        <span class="highlight-comment">// top level nodes that have an image index set.</span>
        <span class="highlight-keyword">if</span>((e.State &amp; TreeNodeStates.Focused) != <span class="highlight-number">0</span> &amp;&amp; tvExtTree.FullRowSelect)
            pen = SystemPens.ControlLightLight;
        <span class="highlight-keyword">else</span>
            pen = SystemPens.ControlDarkDark;

        top = e.NodeBounds.Top + (e.NodeBounds.Height / <span class="highlight-number">2</span>);

        e.Graphics.DrawLine(pen, e.NodeBounds.Left, top,
            e.NodeBounds.Left + e.NodeBounds.Width, top);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABABA_tab1" class="codeSnippetContainerTabSingle">VB.NET - TreeNodeDrawing Event Handler Example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">''' &lt;summary&gt;</span>
<span class="highlight-comment">''' Test TreeNodeDrawing event handler.  This occurs before the tree</span>
<span class="highlight-comment">''' view draws the node.</span>
<span class="highlight-comment">''' &lt;/summary&gt;</span>
<span class="highlight-comment">''' &lt;param name="sender"&gt;The sender of the event&lt;/param&gt;</span>
<span class="highlight-comment">''' &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> tvExtTree_TreeNodeDrawing(<span class="highlight-keyword">ByVal</span> sender <span class="highlight-keyword">As</span> System.<span class="highlight-keyword">Object</span>, _
  <span class="highlight-keyword">ByVal</span> e <span class="highlight-keyword">As</span> EWSoftware.ListControls.DrawTreeNodeExtendedEventArgs) _
  <span class="highlight-keyword">Handles</span> tvExtTree.TreeNodeDrawing
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> chkFormDrawNode.Checked <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Use solid 2px lines</span>
    e.LinePen.DashStyle = DashStyle.Solid
    e.LinePen.Width = <span class="highlight-number">2</span>

    <span class="highlight-comment">' Change the text by adding the node name.  Assigning new text</span>
    <span class="highlight-comment">' automatically recalculates the text and focus bounds. We could</span>
    <span class="highlight-comment">' draw the text, but we'll let the base class handle it. Note that</span>
    <span class="highlight-comment">' since the tree view doesn't know about the extra text, it won't</span>
    <span class="highlight-comment">' show the horizontal scrollbar if it goes off the right edge.</span>
    e.Text += <span class="highlight-literal">" ("</span> &amp; e.Node.Name &amp; <span class="highlight-literal">")"</span>

    <span class="highlight-comment">' If the item height is larger than 35, wrap the text too</span>
    <span class="highlight-keyword">If</span> tvExtTree.ItemHeight &gt; <span class="highlight-number">35</span> <span class="highlight-keyword">Then</span>
        e.StringFormat.FormatFlags = StringFormatFlags.NoClip

        <span class="highlight-comment">' Limit the text to the right edge of the node bounds.  Note</span>
        <span class="highlight-comment">' that this won't stop the tree view from showing a horizontal</span>
        <span class="highlight-comment">' scrollbar.</span>
        e.TextBounds = <span class="highlight-keyword">new</span> Rectangle(e.TextBounds.Left, e.NodeBounds.Top,
            e.NodeBounds.Width - e.TextBounds.Left, e.NodeBounds.Height)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' NOTE:</span>
    <span class="highlight-comment">' If you choose to draw one or more parts of the node, you should</span>
    <span class="highlight-comment">' draw the background first, then the node parts, and then turn</span>
    <span class="highlight-comment">' off the NodeParts.Background flag along with the other node part</span>
    <span class="highlight-comment">' flags in the e.NodeParts property before returning.</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABA_tab1" class="codeSnippetContainerTabSingle">VB.NET - TreeNodeDrawn Event Handler Example</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">''' &lt;summary&gt;</span>
<span class="highlight-comment">''' Test TreeNodeDrawn event handler.  This occurs after the tree view</span>
<span class="highlight-comment">''' has drawn the node.</span>
<span class="highlight-comment">''' &lt;/summary&gt;</span>
<span class="highlight-comment">''' &lt;param name="sender"&gt;The sender of the event&lt;/param&gt;</span>
<span class="highlight-comment">''' &lt;param name="e"&gt;The event arguments&lt;/param&gt;</span>
<span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> tvExtTree_TreeNodeDrawn(<span class="highlight-keyword">ByVal</span> sender <span class="highlight-keyword">As</span> System.<span class="highlight-keyword">Object</span>, _
  <span class="highlight-keyword">ByVal</span> e <span class="highlight-keyword">As</span> EWSoftware.ListControls.DrawTreeNodeExtendedEventArgs) _
  <span class="highlight-keyword">Handles</span> tvExtTree.TreeNodeDrawn
    <span class="highlight-keyword">Dim</span> pen <span class="highlight-keyword">As</span> Pen
    <span class="highlight-keyword">Dim</span> top <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span>

    <span class="highlight-keyword">If</span> chkFormDrawNode.Checked <span class="highlight-keyword">And</span> e.Node.Level = <span class="highlight-number">0</span> <span class="highlight-keyword">And</span> e.ImageIndex &lt;&gt; <span class="highlight-number">-1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-comment">' Nothing exciting, we'll just draw a line through top level nodes</span>
        <span class="highlight-comment">' that have an image index set.</span>
        <span class="highlight-keyword">If</span> (e.State <span class="highlight-keyword">And</span> TreeNodeStates.Focused) &lt;&gt; <span class="highlight-number">0</span> <span class="highlight-keyword">And</span> tvExtTree.FullRowSelect
            pen = SystemPens.ControlLightLight
        <span class="highlight-keyword">Else</span>
            pen = SystemPens.ControlDarkDark
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

        top = <span class="highlight-keyword">CType</span>(e.NodeBounds.Top + (e.NodeBounds.Height / <span class="highlight-number">2</span>), <span class="highlight-keyword">Integer</span>)

        e.Graphics.DrawLine(pen, e.NodeBounds.Left, top, _
            e.NodeBounds.Left + e.NodeBounds.Width, top)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="cf9fb0c5-95a1-857b-561f-1edb09d1b8b3.htm">DrawTreeNodeExtendedEventArgs Class</a></div><div class="seeAlsoStyle"><a href="ab9eccdf-8f8d-ac48-e88d-b334ab7b4d49.htm">EWSoftware.ListControls Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://github.com/EWSoftware/ListControls" target="_blank">[v2015.1.27.0] Copyright © 2005-2015, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSoftware.ListControls Library Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="ListControls"></div>
</body></html>