<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DataNavigator Control Tutorial</title><meta name="Title" content="DataNavigator Control Tutorial" /><meta name="Help.Id" content="8fbf556a-9edc-4071-85ef-6df0d4d13950" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="8fbf556a-9edc-4071-85ef-6df0d4d13950" /><meta name="Description" content="The DataNavigator control allows you to navigate through a data source using a set of VCR-style buttons displaying one row at a time." /><meta name="tocFile" content="../toc/IDD.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">EWSoftware.ListControls Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>DataNavigator Control Tutorial</h1><div><p>This topic describes the Data Navigator control and its features.</p><ul class="is-hidden-tablet"><li><a href="#Info">General Information</a></li><li><a href="#ChgPolicy">The Data Navigator's Change Policy</a></li><li><a href="#Validation">Using Validation with the Data Navigator</a></li></ul></div><h2 id="Info" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>General Information</h2><div id="IDBABSection"><p>The <span class="code">DataNavigator</span> control allows you to navigate through a data source
using a set of VCR-style buttons displaying one row at a time.  To use it, simply drag the control from the
toolbox, drop it on the form, and use the <strong>Properties</strong> window to adjust its settings.  In
addition, you will need to add other controls to the form and bind them to fields in the data source used by the
data navigator control.</p><p>The properties in the <strong>Appearance</strong> category allow you to change its
appearance and show or hide the Add and Delete buttons.</p><p>The properties in the <strong>Behavior</strong> category can be used to specify whether or
not additions, edits, or deletions are allowed to the data source, the shortcut keys to use for deleting a row,
moving to the new row, or jumping to the row number navigation text box, and setting the repeat speed for the
Next and Previous navigation buttons.</p><p>The control supports the same complex data sources that any other standard .NET control can use
(i.e. data sets, data views, data tables, arrays, etc).  To assign a data source and edit its contents, you must
set the <span class="code">DataSource</span> property.  You may also need to set the <span class="code">DataMember</span>
property if the source contains multiple items to which the data navigator can bind (i.e. a
<span class="code">DataSet</span>).  If you assign these properties in code, always assign the
<span class="code">DataSource</span> property last to improve performance.  This is true of all .NET controls as
assigning a new display or value member forces the control to reevaluate its data source.  By assigning the data
source last, it will only have to evaluate the data source once.  You can also assign the data source properties
using the <span class="code">SetDataBinding</span> method.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// Set the data source properties individually
dnNav.DataMember = "Addresses";
dnNav.DataSource = dsAddresses;

// Set the data source using the SetDataBinding method
dnNav.SetDataBinding(dsAddresses, "Addresses");

// Specify the table directly without going through the data set
dnNav.SetDataBinding(dsAddresses.Tables[0], null);</code></pre></div></div><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">VB.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet">' Set the data source properties individually
dnNav.DataMember = "Addresses"
dnNav.DataSource = dsAddresses

' Set the data source using the SetDataBinding method
dnNav.SetDataBinding(dsAddresses, "Addresses")

' Specify the table directly without going through the data set
dnNav.SetDataBinding(dsAddresses.Tables(0), Nothing)</code></pre></div></div><p>Unlike the standard .NET list controls, all of the controls in the <span class="code">EWSoftware.ListControls</span>
namespace allow you to index their data source to extract values.  This allows you to obtain the value of a field
in the currently selected row or a field in any row even if it is not the selected row and regardless of whether
or not the field is displayed on the form or user control containing the data navigator.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// Get the last name from the current row
string lastName = (string)dnPeople["LastName"];

// Get the age from the sixth row
int age = (int)dnPeople[5, "Age"];</code></pre></div></div><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">VB.NET</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vbnet">' Get the last name from the current row
Dim lastName As String = CType(dnPeople("LastName"), String)

' Get the age from the sixth row
Dim age As Integer = CType(dnPeople(5, "Age"), Integer)</code></pre></div></div></div><h2 id="ChgPolicy" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>The Data Navigator's Change Policy</h2><div id="IDCABSection"><p>The <span class="code">DataNavigator</span> control has three properties that allow you to specify
whether additions, edits, or deletes are allowed to be made to the data source (<span class="code">AllowAdditions</span>,
<span class="code">AllowEdits</span>, and <span class="code">AllowDeletes</span>).  All three properties default to
true.  However, when a data source is assigned to the data navigator, these properties may be updated to reflect
the change policy of the data source.  For example, if the data source does not allow additions, the
<span class="code">AllowAdditions</span> property will also be set to false.  Likewise, you can set the properties
to false to disallow the associated modification even if the underlying data source allows it.</p><p>The data navigator will automatically adjust its behavior when additions are not allowed by
disabling the Add button in the navigation controls.  When deletions are not allowed, it disables the Delete
button in the navigation controls.  The shortcut keys for both operations are also ignored when their associated
behavior is not allowed.  The data navigator control cannot handle the <span class="code">AllowEdits</span>
setting by itself.  It is up to you to add code to your form to check the change policy as needed and disable the
controls if additions or edits are not allowed.  The demo application contains an example of this.</p><p>The data navigator also raises a <span class="code">NoRows</span> event when a data source is
assigned that contains no rows or when the last row is deleted.  You can use this event to disable edit controls
until a new row is added and/or display a message asking the user to add a new row.  The demo application shows
one way of doing this.</p></div><h2 id="Validation" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Using Validation with the Data Navigator</h2><div id="IDDABSection"><p>If you need to perform validation on the form controls that are bound to fields in the data
navigator's data source, you should handle the <span class="code">Validating</span> event and (optionally) the
<span class="code">Validated</span> event on the <span class="code">DataNavigator</span> control.  It will fire the
<span class="code">Validating</span> and <span class="code">Validated</span> events on itself whenever an attempt
is made to move off of the current row using the navigation controls.</p><p>The <span class="code">Validating</span> event is fired first. If not canceled, it raises the
<span class="code">Validated</span> event and allows the position change to occur.  If you need to check to see if
the current row is valid at any other time (i.e. prior to saving changes to the data source), you can check the
<span class="code">IsValid</span> property on the data navigator.  This causes it to fire the validation events
and returns true if the row is valid (the <span class="code">Validating</span> event was not canceled) or false if
the row is not valid.  The demo application contains an example.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="ce5cb77a-44a9-4629-aec3-6a8435cd8e53.htm">Control Tutorials</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">General Information</a></li><li><a class="quickLink">The Data Navigator's Change Policy</a></li><li><a class="quickLink">Using Validation with the Data Navigator</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://github.com/EWSoftware/ListControls" target="_blank" rel="noopener noreferrer">[v2024.12.18.0] Copyright © 2005-2024, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSoftware.ListControls%20Library%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="ListControls"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>