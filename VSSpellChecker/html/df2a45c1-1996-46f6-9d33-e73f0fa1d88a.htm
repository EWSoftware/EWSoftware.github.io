<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Add Spell Checking for Third Party Content Types</title><meta name="Title" content="Add Spell Checking for Third Party Content Types" /><meta name="Help.Id" content="df2a45c1-1996-46f6-9d33-e73f0fa1d88a" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="df2a45c1-1996-46f6-9d33-e73f0fa1d88a" /><meta name="Description" content="A NuGet package is available that will allow you to enable spell checking for third-party content types within Visual Studio (EWSoftware.VSSpellChecker)." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Visual Studio Spell Checker Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Add Spell Checking for Third Party Content Types</h1><div><p>A NuGet package is available that will allow you to enable spell checking for third-party content
types within Visual Studio (<strong>EWSoftware.VSSpellChecker</strong>).  This topic provides a simple
example of a tagger that enables spell checking for such third-party content types.</p><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body"><p>The NuGet package version may not match the version of the latest release of the spell checker
package.  This is normal.  The NuGet package assembly version only changes when it contains a breaking change
that will require rebuilding any code that utilizes it.</p></div></article></div><div id="IDBABSection" class="noTitle"><p>Once you have installed the NuGet package in your project, add a new class file to the project that
implements the content type you want to support.  Replace the new class's content with the following code:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Example Tagger</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using System;
using System.Collections.Generic;
using System.ComponentModel.Composition;

using Microsoft.VisualStudio.Text;
using Microsoft.VisualStudio.Text.Tagging;
using Microsoft.VisualStudio.Utilities;

using VisualStudio.SpellChecker.Definitions;

namespace ExampleTagger.SpellCheckSupport
{
    /// &lt;summary&gt;
    /// Define a class to serve as the tag
    /// &lt;/summary&gt;
    class NaturalTextTag : INaturalTextTag
    {
    }

    /// &lt;summary&gt;
    /// Implement the tagger provider
    /// &lt;/summary&gt;
    [Export(typeof(ITaggerProvider))]
    [ContentType("MyCustomContentType")] // IMPORTANT: Specify your content type here
    [TagType(typeof(NaturalTextTag))]
    class MyCustomContentTypeNaturalTextTaggerProvider : ITaggerProvider
    {
        /// &lt;inheritdoc /&gt;
        public ITagger&lt;T&gt; CreateTagger&lt;T&gt;(ITextBuffer buffer) where T : ITag
        {
            return new MyCustomContentTypeNaturalTextTagger() as ITagger&lt;T&gt;;
        }
    }

    /// &lt;summary&gt;
    /// Implement the tagger
    /// &lt;/summary&gt;
    class MyCustomContentTypeNaturalTextTagger : ITagger&lt;NaturalTextTag&gt;
    {
        /// &lt;summary&gt;
        /// This is a simple tagger that returns tags for the normalized snapshot
        /// span collection.
        /// &lt;/summary&gt;
        /// &lt;param name="spans"&gt;&lt;/param&gt;
        /// &lt;returns&gt;&lt;/returns&gt;
        public IEnumerable&lt;ITagSpan&lt;NaturalTextTag&gt;&gt; GetTags(NormalizedSnapshotSpanCollection spans)
        {
            foreach(var snapshotSpan in spans)
                yield return new TagSpan&lt;NaturalTextTag&gt;(snapshotSpan, new NaturalTextTag());
        }

#pragma warning disable 67
        /// &lt;inheritdoc /&gt;
        /// &lt;remarks&gt;Not used by this tagger&lt;/remarks&gt;
        public event EventHandler&lt;SnapshotSpanEventArgs&gt; TagsChanged;
#pragma warning restore 67
    }
}</code></pre></div></div><p>Be sure to specify your custom content type in the <span class="code">ContentType</span> attribute
on the tagger provider class where indicated.  The tagger above is a basic one that simply returns a tag span for
each normalized snapshot span.  More complex taggers can make use of a classifier to further examine each
snapshot span and determine if the span should be included for spell checking.  See the tagger classes in the
spell checker project for more complex examples.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="deeba4a0-5a5f-497c-a9c1-7dec64e9c2bf.htm">System Requirements and Building the Code</a></div><div><a href="0ff35371-69b5-48dd-a062-037abe2469de.htm">Defining Solution/Project Spell Check Classifiers</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/VSSpellChecker" target="_blank" rel="noopener noreferrer">Copyright © 2013-2022, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Visual%20Studio%20Spell%20Checker%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="VSSpellChecker"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>