<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Code Analysis Dictionaries</title><meta name="Title" content="Code Analysis Dictionaries" /><meta name="Help.Id" content="e01bd3d9-c525-4407-8c65-fcdb64539299" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="e01bd3d9-c525-4407-8c65-fcdb64539299" /><meta name="Description" content="This category lets you indicate whether or not to import code analysis dictionaries in the project for use in spelling checking. The imported options are only applied to the spell checked elements (comments, strings, XML content, attribute values, etc.)." /><meta name="tocFile" content="../toc/IDJ.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Visual Studio Spell Checker Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Code Analysis Dictionaries</h1><div><p>This category lets you indicate whether or not to import code analysis dictionaries in the project
for use in spelling checking.  The imported options are only applied to the spell checked elements (comments,
strings, XML content, attribute values, etc.).  To be imported, the code analysis XML file must appear in the
project of the file being spell checked and must have its <strong>Build Action</strong> property set to
<span class="code">CodeAnalysisDictionary</span>.</p><article class="message is-warning"><div class="message-header"><p><span class="icon"><i class="fa fa-warning"></i></span>  Important</p></div><div class="message-body"><p>For the code analysis dictionaries to be recognized by the code analyzer for use in spell checking
identifiers, an additional step is required so that they are passed as additional files to the analyzers.  Add
the <span class="code">AdditionalFileItemNames</span> property to a property group in each project in the solution
and update it so that it includes all <span class="code">CodeAnalysisDictionary</span> items as additional files
as shown in the example below.</p></div></article><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Specifying Code Analysis Dictionaries as Additional Files</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;PropertyGroup&gt;
  &lt;!-- Update the property to include all code analysis dictionary files --&gt;
  &lt;AdditionalFileItemNames&gt;$(AdditionalFileItemNames);CodeAnalysisDictionary&lt;/AdditionalFileItemNames&gt;
&lt;/PropertyGroup&gt;</code></pre></div></div></div><div id="IDBABSection" class="noTitle"><p>The following options are available.</p><ul><li><p><strong>Import project code analysis dictionaries if present</strong> - This option is enabled by
default and controls whether or not the code analysis dictionaries are imported.  If disabled, all of the
following options are ignored.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_import_code_analysis_dictionaries = [true|false]</code></pre></div></div></li><li><p><strong>Treat unrecognized words as misspelled words</strong> - This option is enabled by default and
will cause unrecognized words in the dictionary to be treated as misspelled words.  Adding a
<span class="code">SpellingAlternates</span> attribute to the <span class="code">Word</span> element allows you to
specify a list of one or more comma-separated words to offer as suggested replacements.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_treat_unrecognized_words_as_misspelled = [true|false]</code></pre></div></div></li><li><p><strong>Treat deprecated terms as misspelled words</strong> - This option is enabled by default and
will cause deprecated terms in the dictionary to be treated as misspelled words.  The preferred alternate is
offered as the suggested replacement.  If the preferred alternate is camel cased, spaces are inserted before each
capital letter.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_treat_deprecated_terms_as_misspelled = [true|false]</code></pre></div></div></li><li><p><strong>Treat compound terms as misspelled words</strong> - This option is enabled by default and will
cause compound terms in the dictionary to be treated as misspelled words.  The compound alternate is offered as
the suggested replacement.  If the compound alternate is camel cased, spaces are inserted before each capital
letter.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_treat_compound_terms_as_misspelled = [true|false]</code></pre></div></div></li><li><p><strong>Treat casing exceptions as ignored words</strong> - This option is disabled by default.  If
enabled, casing exceptions in the dictionary will be treated as ignored words.  Typically, casing exceptions are
in all uppercase or camel case.  Camel cased words are always ignored.  All uppercase words are ignored if the
<strong>Ignore words in all uppercase</strong> option in the <strong>General Settings</strong> category is enabled.  This option
may be of use if that option is disabled so that acronyms in all uppercase within this category are not spell
checked.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_treat_casing_exceptions_as_ignored_words = [true|false]</code></pre></div></div></li><li><p><strong>Recognized Word Handling</strong> - This option controls how recognized words in the dictionary
are treated.  The available options are:</p><ul><li><p><strong>None</strong> - Recognized words are not imported and are spell checked in the normal
manner.</p></li><li><p><strong>Treat all as ignored words</strong> - Recognized words are treated as ignored words and
will not be offered as suggested replacements for misspelled words.  This is the default setting.</p></li><li><p><strong>Add all to dictionary</strong> - Recognized words are added to the dictionary and will be
offered as suggested replacements for misspelled words.</p></li><li><p><strong>Spelling attribute determines usage</strong> - An optional <span class="code">Spelling</span>
attribute on each <span class="code">Word</span> element determines how each recognized word is handled.  If set
to <span class="code">Add</span>, the word is added to the dictionary.  If set to <span class="code">Ignore</span>,
the word is treated as an ignored word.  If set to <span class="code">None</span>, any other value, or is omitted,
the word is not imported and will be spell checked in the normal manner.</p></li></ul><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_cad_recognized_word_handling = [None|IgnoreAllWords|AddAllWords|AttributeDeterminesUsage]</code></pre></div></div></li></ul><p>Below is an example of a code analysis dictionary file with the extra attributes used by the spell
checker.</p><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Tip</p></div><div class="message-body"><p>Once you have configured and saved the settings, you can open the code analysis dictionary file
itself to see how the words within it are treated.</p></div></article><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-XML">&lt;Dictionary&gt;
  &lt;!-- This is a code analysis dictionary used for Visual Studio code analysis.
       See http://msdn.microsoft.com/en-us/library/bb514188.aspx --&gt;
  &lt;Words&gt;
    &lt;Unrecognized&gt;
      &lt;!-- SpellingAlternates is a comma-separated list of alternate spellings
           to offer as suggestions --&gt;
      &lt;Word SpellingAlternates="literally, precisely"&gt;verbatim&lt;/Word&gt;
    &lt;/Unrecognized&gt;
    &lt;Recognized&gt;
      &lt;!-- The Spelling attribute tells the spell checker how to treat the word:
           Add = Add to dictionary
           Ignore = Ignore word
           None/other value/attribute omitted = Not handled, pass through as a
           normal word --&gt;
      &lt;Word Spelling="Add"&gt;yadda&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Epg&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Mvp&lt;/Word&gt;
      &lt;Word&gt;Gui&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Mru&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Kpi&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Hsl&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Rgb&lt;/Word&gt;
      &lt;Word Spelling="Ignore"&gt;Bim&lt;/Word&gt;
      &lt;Word&gt;Appender&lt;/Word&gt;
    &lt;/Recognized&gt;
    &lt;Deprecated&gt;
      &lt;!-- The preferred alternate is offered as the suggested replacement --&gt;
      &lt;Term PreferredAlternate="yadda"&gt;blah&lt;/Term&gt;
      &lt;Term PreferredAlternate="Elements"&gt;NuoGui&lt;/Term&gt;
    &lt;/Deprecated&gt;
    &lt;Compound&gt;
      &lt;!-- The compound alternate is offered as the suggested replacement with
           spaces inserted after each capital letter. --&gt;
      &lt;Term CompoundAlternate="BigBox"&gt;bigbox&lt;/Term&gt;
    &lt;/Compound&gt;
  &lt;/Words&gt;
  &lt;Acronyms&gt;
    &lt;!-- These are treated as ignored words if the option is enabled --&gt;
    &lt;CasingExceptions&gt;
      &lt;Acronym&gt;LCID&lt;/Acronym&gt;
      &lt;Acronym&gt;UI&lt;/Acronym&gt;
      &lt;Acronym&gt;SQLite&lt;/Acronym&gt;
    &lt;/CasingExceptions&gt;
  &lt;/Acronyms&gt;
&lt;/Dictionary&gt;</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="fb81c214-0fe0-4d62-a172-d7928d5b91d5.htm">Configuration Options</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://GitHub.com/EWSoftware/VSSpellChecker" target="_blank" rel="noopener noreferrer">Copyright © 2013-2024, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Visual%20Studio%20Spell%20Checker%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="VSSpellChecker"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>