<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Code Analyzer Options</title><meta name="Title" content="Code Analyzer Options" /><meta name="Help.Id" content="09cc5bfa-9eba-47e5-ba5f-a36e04f09b0d" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="09cc5bfa-9eba-47e5-ba5f-a36e04f09b0d" /><meta name="Description" content="This category contains several options that let you fine tune how source code files are spell checked. The following options are available." /><meta name="tocFile" content="../toc/IDJ.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">VS Spell Checker Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Code Analyzer Options</h1><div><p>This category contains several options that let you fine tune how source code files are spell
checked.  The following options are available.</p></div><div id="IDBABSection" class="noTitle"><p>The following options only apply to the code analyzer used to spell check identifiers in C# source
code (Visual Studio 2019 and later).  Note that camel cased identifiers and those with underscores will be split
into individual words and each word in the identifier will be spell checked.  The default settings are configured
so that only public and protected member identifiers are spell checked.  The options below can be adjusted to
include private members, internal members, local variables, and compiler generated code if so desired.</p><ul><li><p><strong>Ignore identifiers if private</strong> - If enabled, the default, all identifiers with a
visibility of private are ignored.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_identifier_if_private = [true|false]</code></pre></div></div></li><li><p><strong>Ignore identifier if internal</strong> - If enabled, the default, all identifiers with a
visibility of internal are ignored.  Note that protected internal identifiers will still be spell checked as the
protected visibility will take precedence.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_identifier_if_internal = [true|false]</code></pre></div></div></li><li><p><strong>Ignore identifier if all uppercase</strong> - If enabled, any identifier that consists only of
uppercase letters will be ignored.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_identifier_if_all_uppercase = [true|false]</code></pre></div></div></li><li><p><strong>Ignore identifiers within member bodies</strong> - If enabled, the default, all identifiers
within the body of a member will be ignored (local variables in properties, methods, lambda expressions, etc.).
This can be useful in reducing the number of spelling errors reported since method bodies tend to contain more
abbreviations and other shortened identifiers.  Since these will never be publicly visible, it may be preferable
to skip spell checking them.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_identifiers_within_member_bodies = [true|false]</code></pre></div></div></li><li><p><strong>Ignore type parameters</strong> - If enabled, type parameters on generic types such as
<span class="code">TKey</span> and <span class="code">TValue</span> will be ignored.  If spell checked, the leading
uppercase "T" in the examples would be skipped so it would only flag a spelling error if the remainder of the
type parameter was misspelled.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_type_parameters = [true|false]</code></pre></div></div></li><li><p><strong>Ignore compiler generated code</strong> - If enabled, the default, all compiler generated code
is skipped and will not be spell checked.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_if_compiler_generated = [true|false]</code></pre></div></div></li></ul><p>The following options apply to C# source code and are implemented via the classifier in the Visual
Studio editor.  By enabling the last option, it is also possible to have these options applied to all C-style
code as applicable.</p><ul><li><p><strong>Ignore XML documentation comments (/// ... and /** ... */)</strong> - If enabled, XML
documentation comments will be excluded from spell checking.  Unless disabled with the option below, standard
delimited comments will still be included for spell checking.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_xml_doc_comments = [true|false]</code></pre></div></div></li><li><p><strong>Ignore delimited comments (/* ... */)</strong> -  This is useful for excluding private comments
that nobody will see except for developers and commented out code.  Unless disabled with the option above,
delimited XML comments will still be included for spell checking.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_delimited_comments = [true|false]</code></pre></div></div></li><li><p><strong>Ignore standard single line comments (// ...)</strong> - This is useful for excluding private
comments that nobody will see except for developers and commented out code.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_standard_single_line_comments = [true|false]</code></pre></div></div></li><li><p><strong>Ignore quadruple slash single line comments (//// ...)</strong> - This option is useful for
ignoring commented out code using the method recommended by StyleCop so that it does not produce style warnings.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_quadruple_slash_comments = [true|false]</code></pre></div></div></li><li><p><strong>Ignore normal string literals ("...")</strong> - This is useful for ignoring string literals in
code if you use resource files for localized text.  In such cases, the string literals are usually not valid
words and enabling this option prevents the resource keys from showing up as spelling errors.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_normal_strings = [true|false]</code></pre></div></div></li><li><p><strong>Ignore verbatim string literals (@"...")</strong> - Verbatim string literals typically contain
such things as filenames or multi-line text that is not usually considered text that needs to be spell checked.
Enabling this option prevents their content from being checked for spelling errors.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_verbatim_strings = [true|false]</code></pre></div></div></li><li><p><strong>Ignore interpolated string literals ($"{PropertyName}...")</strong> - This is useful for
skipping interpolated strings which may only contain property format specifiers.  Enabling this option prevents
their content from being checked for spelling errors.  If left disabled, all string content except text within
braces which denote format specifiers will be spell checked.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_interpolated_strings = [true|false]</code></pre></div></div></li><li><p><strong>Ignore raw string literals ("""...""")</strong> - Verbatim string literals typically contain
such things as filenames or multi-line text that is not usually considered text that needs to be spell checked.
Enabling this option prevents their content from being checked for spelling errors.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_ignore_raw_strings = [true|false]</code></pre></div></div></li><li><p><strong>Apply the above options to all C-style languages as applicable</strong> - If this option is
enabled, the above options are applied to all C-style languages as applicable.  For example, all of the comments
options and the normal string literal option will be applied to C, C++, JavaScript, etc.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">vsspell_code_analyzer_apply_to_all_c_style_languages = [true|false]</code></pre></div></div></li></ul></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="fb81c214-0fe0-4d62-a172-d7928d5b91d5.htm">Configuration Options</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://GitHub.com/EWSoftware/VSSpellChecker" target="_blank" rel="noopener noreferrer">Copyright © 2013-2025, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=VS%20Spell%20Checker%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><iframe src="https://github.com/sponsors/EWSoftware/button" title="Sponsor EWSoftware" height="32" width="114" style="border: 0; border-radius: 6px;"></iframe>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>