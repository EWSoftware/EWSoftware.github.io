<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Architecture</title><meta name="Title" content="Architecture" /><meta name="Help.Id" content="80c983f4-1a97-473b-b614-2b4d671d50ca" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="80c983f4-1a97-473b-b614-2b4d671d50ca" /><meta name="Description" content="At a high level, Sandcastle can be seen as a set of tools that transforms raw input into documentation output." /><meta name="tocFile" content="../toc/IDX.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle Help File Builder" style="height: 69px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle Help File Builder Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Architecture</h1><div><p>This topic gives an overview of the Sandcastle architecture.</p><ul class="is-hidden-tablet"><li><a href="#Layers">Sandcastle Layers</a></li><li><a href="#Modes">Modes of Operation</a><ul><li><a href="#ReferenceMode">Reference Mode</a></li><li><a href="#ConceptualMode">Conceptual Mode</a></li></ul></li><li><a href="#PresentationStyles">Presentation Styles</a></li></ul></div><h2 id="Layers" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Sandcastle Layers</h2><div id="IDBABSection"><p>At a high level, Sandcastle can be seen as a set of tools that transforms raw input into
documentation output.</p><figure class="mediaCenter"><img alt="Sandcastle Layers" src="../media/SandcastleLayers.jpg" /></figure><p>Inputs of various types are supported such as managed assemblies and raw XML documentation files,
which are typically compiler-generated along with the assemblies, as well as MAML topics and additional content
such as images and code snippets.  With this input, Sandcastle performs a highly configurable set of
transformations using a presentation style to produce web-ready HTML files or other file formats as output.</p><p>Sandcastle's output can be used as-is by hosting the generated HTML files and their dependencies
(namely, CSS, scripts, and images) on a web server.  Alternatively, and more common, the generated HTML files can
be passed as input to help compilers to produce compiled help in various forms.  Compilers are additional tools
(downloaded separately) that aggregate all of the HTML files produced by Sandcastle to create compiled help
files.  These are files that can be downloaded and viewed in a special desktop application such as the HTML Help
Viewer, Microsoft Document Explorer, or Microsoft Help Viewer.  Typically, compiled help files are distributed
with the products being documented, or at least made available as a separate download.</p><p>Other presentation styles can be created to produce non-HTML output as well.  For example, there
is a presentation styles that outputs markdown content suitable for GitHub wikis and another that produces an
Open XML document that can be opened by Microsoft Word or Open Office.</p></div><h2 id="Modes" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Modes of Operation</h2><div id="IDCABSection"><p>There are two modes of operation supported by Sandcastle: Reference and Conceptual.  The
differences between them can be found in both the input and output of Sandcastle. To provide a quick definition
of each, consider reference documentation to provide information about the physical properties of a managed
library or application, such as the actual namespaces, types, members and method arguments, and consider
conceptual documentation to provide instructional information about the overall design and conceptual properties
of a managed library or application, such as how to accomplish specific usage scenarios and providing an in-depth
analysis of specifically complex APIs. More distinctions between the two modes can be found in their
corresponding sections below.</p><figure class="mediaCenter"><img alt="Sandcastle Modes" src="../media/SandcastleModes.jpg" /></figure><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body"><p>Although built separately, the outputs from the reference and conceptual builds are compatible
and are typically combined into a single help file.</p></div></article><h4 id="ReferenceMode" class="quickLinkHeader">Reference Mode</h4><p>To produce reference documentation, Sandcastle requires managed assemblies as input. The
<strong>MRefBuilder</strong> command-line tool is used to analyze the physical properties of the
assemblies, as well as their dependencies, ultimately producing an XML reflection file that becomes input for the
next steps of the process. This XML reflection file contains all of the information that is required to document
the physical properties of the input assemblies.</p><p>Sandcastle also accepts XML documentation files as input. XML documentation files are typically
generated by code compilers from the triple-slash (C#) or triple-apostrophe (VB) comments found in source code
files, at the same time that their corresponding assemblies are compiled. XML documentation files contain
specific identifiers that allow Sandcastle to correlate XML documentation for each API to the same API in the XML
reflection file that is produced by <strong>MRefBuilder</strong>.  Additionally, reference mode
supports shared inputs of various types such as images and code snippets to be included in the documentation.</p><p>The output of Sandcastle in reference mode is created by the <strong>BuildAssembler</strong>
tool with a specific configuration. It produces a set of files that document the physical structure of the XML
reflection file (generated by <strong>MRefBuilder</strong>) passed in as input.  XML documentation
comments that are discovered during the process are also injected into the files in the appropriate places;
e.g., contents of the <span class="code">&lt;summary&gt;</span> elements appear at the top of the file, while
<span class="code">&lt;remarks&gt;</span> contents appear after the syntax section.</p><p>Sandcastle also automatically generates a table of contents (TOC) and a keyword index based on
the XML reflection file. Each auto-generated API topic also includes appropriate hyperlinks. Typically,
pseudo-topics are automatically generated as well; e.g., a topic containing a list of all the types in a
particular namespace, and another topic containing a list of all properties in a particular type, etc.</p><h4 id="ConceptualMode" class="quickLinkHeader">Conceptual Mode</h4><p>To produce conceptual documentation, Sandcastle depends on a special XML schema called
Microsoft Assistance Markup Language (MAML). The input to Sandcastle in conceptual mode must be a set of XML
documentation files written against the MAML schema. XML companion files can be provided as input to specify
metadata for each MAML topic; e.g., index keywords.  Additionally, conceptual mode supports shared inputs of
various types such as images and code snippets to be included in the documentation.</p><p>The output of Sandcastle in conceptual mode is created by the <strong>BuildAssembler</strong>
tool with a specific configuration.  It produces a set of files that are created by transforming the individual
MAML files, where one output file is created per MAML file.  The files display the data in each MAML topic
according to the document type of that topic; e.g., all <strong>How-To</strong> topics will
have an introduction and at least one procedural section that contains an ordered list of steps for the reader
to follow.  Most, but not all MAML topics also contain a <strong>See Also</strong> section at the bottom.
Special MAML document types, such as <strong>Glossary</strong>, use a very different type of
transformation from the other document types.</p><p>It is up to the author to specify a table of contents (TOC) in conceptual mode. Likewise, a
keyword index is not automatically generated, so it is the author's responsibility to specify relevant keywords
for each MAML topic using an XML companion file.</p></div><h2 id="PresentationStyles" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Presentation Styles</h2><div id="IDDABSection"><p>The presentation styles in Sandcastle contain all of the aesthetic resources that are required to
build documentation in different styles.  Each presentation style includes a code-based transformation, XML files
containing localizable shared content, and other supporting files such as CSS files, images, scripts, etc.  The
set transformation is executed once for each topic that <strong>BuildAssembler</strong> processes to
produce an individual HTML or other file type as output.  Each presentation style can have a different set of
transformations (although usually similar in many ways); therefore, each presentation style also must provide a
custom configuration for the <strong>BuildAssembler</strong> tool.  The XML files contain look-up
information, such as localizable textual content.  The other supporting files such as CSS files and images are
referenced by the generated files so technically, they are just static output.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="1f2caa70-729b-48e1-9a9c-b612efd2f3b7.htm">Sandcastle Tools</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Sandcastle Layers</a></li><li><a class="quickLink">Modes of Operation</a><ul class="menu"><li><a class="quickLink">Reference Mode</a></li><li><a class="quickLink">Conceptual Mode</a></li></ul></li><li><a class="quickLink">Presentation Styles</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.8.14.0] Copyright © 2006-2022, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>