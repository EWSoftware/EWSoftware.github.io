<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Component Migration Support</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="migration support" /><meta name="Microsoft.Help.Id" content="bc933f8f-e792-45bf-afec-62aa2c46aa3b" /><meta name="Description" content="This topic provides information on migrating build components, plug-ins, presentation styles, and syntax generators built against v2021.4.9.0 and earlier to the latest release that supports .NET Core and deploying the components as NuGet packages." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Sandcastle Help File Builder Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/bd1ddb51-1c4f-434f-bb1a-ce2135d3a909.htm" title="Sandcastle Help File Builder Documentation" tocid="roottoc">Sandcastle Help File Builder Documentation</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/078cc1c7-7995-431e-bf9c-8813becbe8df.htm" title="Version History" tocid="078cc1c7-7995-431e-bf9c-8813becbe8df">Version History</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/5491f230-cc0d-4604-8710-c046584907bd.htm" title="Version 2022.1.22.0" tocid="5491f230-cc0d-4604-8710-c046584907bd">Version 2022.1.22.0</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/003c85ec-45ad-4123-a31d-fd63a695b1f3.htm" title="Version 2021.11.7.0" tocid="003c85ec-45ad-4123-a31d-fd63a695b1f3">Version 2021.11.7.0</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/bc933f8f-e792-45bf-afec-62aa2c46aa3b.htm" title="Component Migration Support" tocid="bc933f8f-e792-45bf-afec-62aa2c46aa3b">Component Migration Support</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/dc3de2e5-750a-4839-88f9-62eb108c087e.htm" title="Versions 2015.7.25.0 through 2021.4.9.0" tocid="dc3de2e5-750a-4839-88f9-62eb108c087e">Versions 2015.7.25.0 through 2021.4.9.0</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/006F71C5-D279-4A4C-AF34-B5CC28D560C5.htm" title="Versions 2014.1.26.0 Beta through 2015.5.2.0" tocid="006F71C5-D279-4A4C-AF34-B5CC28D560C5">Versions 2014.1.26.0 Beta through 2015.5.2.0</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/22c82423-a322-4857-9bf8-6d1f1c2fba68.htm" title="Versions 1.8.0.0 through 1.9.8.0" tocid="22c82423-a322-4857-9bf8-6d1f1c2fba68">Versions 1.8.0.0 through 1.9.8.0</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/6110ac54-04d8-4624-8a2b-2a58af63c20d.htm" title="Versions 1.0.0.0 through 1.7.0.0" tocid="6110ac54-04d8-4624-8a2b-2a58af63c20d">Versions 1.0.0.0 through 1.7.0.0</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="Sandcastle Help File Builder" width="70" height="68" src="../icons/Sandcastle.jpg" /></td><td class="titleColumn"><h1>Component Migration Support</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>This topic provides information on migrating build components, plug-ins, presentation styles, and
syntax generators built against v2021.4.9.0 and earlier to the latest release that supports .NET Core and
deploying the components as NuGet packages.</p><ul class="autoOutline"><li class="outlineSectionEntry"><a href="#QuickUpdate">Quick Updates for MSBuild Support Only</a></li><li class="outlineSectionEntry"><a href="#RecreateProjects">Support for MSBuild and .NET Core Builds</a></li><li class="outlineSectionEntry"><a href="#BuildComponents">Migrating Build Component Projects</a></li><li class="outlineSectionEntry"><a href="#PlugIns">Migrating Help File Builder Plug-In Projects</a></li><li class="outlineSectionEntry"><a href="#PresentationStyles">Migrating Presentation Style Projects</a></li><li class="outlineSectionEntry"><a href="#SyntaxGenerators">Migrating Syntax Generator Projects</a></li></ul></div><div class="collapsibleAreaRegion" id="QuickUpdate"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Quick Updates for MSBuild Support Only</span></div><div id="ID1RBSection" class="collapsibleSection"><p>Some quick updates can be made to get an existing component working with the new release without
having to recreate the project with the restriction that they will only work with MSBuild.  For .NET Core builds,
the projects will need to be recreated as described in the sections below.  Make the following changes as needed
based on the project type:</p><ul><li><p>Remove any references to <em>Sandcastle.Core</em> and
<em>SandcastleBuilder.Utils</em> and replace them with NuGet package references to
<em>EWSoftware.Sandcastle.Core</em> and/or <em>EWSoftware.SandcastleBuilder.Utils</em> as
needed.  Use the latest release available for each.  Note that the version may not match the latest release of
the help file builder as the package version for these only changes when there are breaking changes to the API.</p></li><li><p>For presentation styles, refer to the section below for additional changes that are required
due to change in the API.</p></li><li><p>Remove the <span class="code">IsConfigurable</span> property from the build component and
plug-in export attributes.</p></li><li><p>If configurable, remove the <span class="code">ConfigureComponent</span> method from build
components and the <span class="code">ConfigurePlugIn</span> method from plug-ins.  Save the code though as you
will need to move it to the configuration forms when you add a new MEF editor factory class below.</p></li><li><p>For plug-ins, change the type on the <span class="code">Initialize</span> method's
<span class="parameter">configuration</span> parameter from <span class="code">XPathNavigator</span>
to <span class="code">XElement</span>.  It will be necessary to rework the initialization code to work with the
new parameter type.</p></li><li><p>For configurable build components and plug-ins, add an editor factory class to the
configuration editor form similar to the following examples.  The first is for a plug-in, the second is for a
build component.</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Important note" /> Important</th></tr><tr><td><p>It is essential that the ID specified in the export attribute matches the ID on the component
or plug-in's export attribute exactly.  This is how the IDEs will match the editor component to the related
build component or plug-in.</p><p>Also note that the <span class="code">EditConfiguration</span> methods now return true if the
configuration was edited or false if it was not rather than the new configuration.  If changes are made to the
configuration, they should be made directly to the passed in XML element.</p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAAGAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAAGAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAAAAGAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAAGAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> SandcastleBuilder.Utils;
<span class="highlight-keyword">using</span> SandcastleBuilder.Utils.BuildComponent;

<span class="highlight-preprocessor">#region</span> Plug-<span class="highlight-keyword">in</span> configuration editor factory <span class="highlight-keyword">for</span> MEF
<span class="highlight-comment">//=====================================================================</span>

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This allows editing of the plug-in configuration</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
[PlugInConfigurationEditorExport(<span class="highlight-literal">"TODO: Put your plug-in ID here"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> PlugInEditorFactory : IPlugInConfigurationEditor
{
    <span class="highlight-comment">/// &lt;inheritdoc /&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> EditConfiguration(SandcastleProject project, XElement configuration)
    {
        <span class="highlight-comment">// TODO: Add code to invoke the editor dialog.</span>
        <span class="highlight-comment">//using (var dlg = new WindowsFormsExampleConfigDlg(configuration))</span>
        <span class="highlight-comment">//{</span>
        <span class="highlight-comment">//    return dlg.ShowDialog() == DialogResult.OK;</span>
        <span class="highlight-comment">//}</span>
    }
}
<span class="highlight-preprocessor">#endregion</span>

<span class="highlight-preprocessor">#region</span> Build component configuration editor factory <span class="highlight-keyword">for</span> MEF
<span class="highlight-comment">//=====================================================================</span>

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This allows editing of the build component configuration</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
[ConfigurationEditorExport(<span class="highlight-literal">"TODO: Put your build component ID here"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> BuildComponentEditorFactory : IConfigurationEditor
{
    <span class="highlight-comment">/// &lt;inheritdoc /&gt;</span>
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">bool</span> EditConfiguration(XElement configuration, CompositionContainer container)
    {
        <span class="highlight-comment">// TODO: Add code to invoke the editor dialog.</span>
        <span class="highlight-comment">//using (var dlg = new WindowsFormsExampleConfigDlg(configuration))</span>
        <span class="highlight-comment">//{</span>
        <span class="highlight-comment">//    return dlg.ShowDialog() == DialogResult.OK;</span>
        <span class="highlight-comment">//}</span>
    }
}
<span class="highlight-preprocessor">#endregion</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAAGAAA");</script></li></ul></div><div class="collapsibleAreaRegion" id="RecreateProjects"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Support for MSBuild and .NET Core Builds</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Starting with version v2022.1.22.0, all component projects use an SDK format
project and contain the necessary properties to generate a NuGet package when built.  This allows them to be
shared publicly on NuGet.org or privately with a local repository.  So that they are platform independent and
work with both MSBuild and the dotnet tool, the projects target .NET Standard 2.0.  Support for configuration has
also been separated from the component assemblies.  If your component supports configuration within the IDE,
create a new project to host the configuration forms.</p><p>It is recommended that you create a new project and import your existing code into the new project
rather than modifying the old project file.  That way, all of the necessary NuGet properties and the build
property file are present and ready to update.  The following sections provide more information on
changes that need to be made to the various component project types.</p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Important note" /> Important</th></tr><tr><td><p>If, after creating a project, you rename the assembly created by the project, be sure to rename
the project's <em>.props</em> file found in the <em>.\build</em> folder to match the new
assembly name.  This is required so that the build properties can be found when added to a help file builder
project using NuGet.</p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="BuildComponents"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Migrating Build Component Projects</span></div><div id="ID3RBSection" class="collapsibleSection"><ul><li><p>Create a new project and edit the properties on the project file's Package properties page that
are used to generate the NuGet package for the component.</p></li><li><p>Import your component's code into the new project to replace the example component.  Some of
the attribute values in the <em>AssemblyInfo.cs</em> file can be put in the project's package
properties instead (title, description, company).</p></li><li><p>In the MEF component factory class, remove the <span class="code">IsConfigurable</span> property
from the attribute metadata.</p></li><li><p>If the component is configurable, remove the <span class="code">ConfigureComponent</span>
method.  To support configuration, you will need to create a new project using the <span class="ui">Build Component/Plug-In
Configuration Editor</span> template project.  See the <a href="9ec616aa-59df-4c5c-a128-e540e6bb479c.htm">Creating a Configuration UI Project</a>
topic for more information.</p></li></ul></div><div class="collapsibleAreaRegion" id="PlugIns"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Migrating Help File Builder Plug-In Projects</span></div><div id="ID4RBSection" class="collapsibleSection"><ul><li><p>Create a new project and edit the properties on the project file's Package properties page that
are used to generate the NuGet package for the plug-in.</p></li><li><p>Import your plug-in's code into the new project to replace the example plug-in.  Some of
the attribute values in the <em>AssemblyInfo.cs</em> file can be put in the project's package
properties instead (title, description, company).</p></li><li><p>In the MEF component factory class, remove the <span class="code">IsConfigurable</span> property
from the attribute metadata.</p></li><li><p>If the component is configurable, remove the <span class="code">ConfigureComponent</span>
method.  To support configuration, you will need to create a new project using the <span class="ui">Build Component/Plug-In
Configuration Editor</span> template project.  See the <a href="9ec616aa-59df-4c5c-a128-e540e6bb479c.htm">Creating a Configuration UI Project</a>
topic for more information.</p></li><li><p>In the plug-in's <span class="code">Initialize</span> method, change the type on the
<span class="parameter">configuration</span> parameter from <span class="code">XPathNavigator</span>
to <span class="code">XElement</span>.  It will be necessary to rework the initialization code to work with the
new parameter type.</p></li></ul></div><div class="collapsibleAreaRegion" id="PresentationStyles"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Migrating Presentation Style Projects</span></div><div id="ID5RBSection" class="collapsibleSection"><ul><li><p>Create a new project and edit the properties on the project file's Package properties page that
are used to generate the NuGet package for the presentation style.</p></li><li><p>Import your presentation style's code and other supporting files into the new project to
replace the example presentation style.  Some of the attribute values in the <em>AssemblyInfo.cs</em>
file can be put in the project's package properties instead (title, description, company).</p></li><li><p>Replace the <span class="code">DocumentModelTransformation</span> and
<span class="code">IntermediateTocTransformation</span> property assignments with the code below to use the
standard document model applicator and table of contents generator.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAAACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">this</span>.DocumentModelApplicator = <span class="highlight-keyword">new</span> StandardDocumentModel();
<span class="highlight-keyword">this</span>.ApiTableOfContentsGenerator = <span class="highlight-keyword">new</span> StandardApiTocGenerator();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABAAACAAA");</script><p>If you have created your own document model and/or table of content XSL transformations, you
will need to convert them to code-based equivalents.  You can use the standard types noted above as a starting
point to see how this can be accomplished.</p></li></ul></div><div class="collapsibleAreaRegion" id="SyntaxGenerators"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Migrating Syntax Generator Projects</span></div><div id="ID6RBSection" class="collapsibleSection"><ul><li><p>Create a new project and edit the properties on the project file's Package properties page that
are used to generate the NuGet package for the syntax generator.</p></li><li><p>Import your syntax generator's code and other supporting files into the new project to
replace the example syntax generator.  Some of the attribute values in the <em>AssemblyInfo.cs</em>
file can be put in the project's package properties instead (title, description, company).</p><p>Note that the syntax generator's <span class="code">IsConfigurable</span> property is still
supported and should be left alone if set as it is used by the syntax component's configuration dialog rather
than a configuration form defined within this project.</p></li></ul></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="078cc1c7-7995-431e-bf9c-8813becbe8df.htm">Version History</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.1.22.0] Copyright © 2006-2022, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
</body></html>