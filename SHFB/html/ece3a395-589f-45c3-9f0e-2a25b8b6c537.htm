<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Item File Templates</title><meta name="Title" content="Item File Templates" /><meta name="Help.Id" content="ece3a395-589f-45c3-9f0e-2a25b8b6c537" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="ece3a395-589f-45c3-9f0e-2a25b8b6c537" /><meta name="Description" content="Item file templates are supplied for each of the common file types within a help file builder project." /><meta name="tocFile" content="../toc/IDF.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle Help File Builder" style="height: 69px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle Help File Builder Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Item File Templates</h1><div><p>Item file templates are supplied for each of the common file types within a help file builder project.
This topic covers how to add a file to a project as well as how to create and install your own custom item file
templates for use from within Visual Studio.</p><ul class="is-hidden-tablet"><li><a href="#AddNewFile">Adding a File to the Project</a></li><li><a href="#CustomTemplates">Creating Custom Item File Templates</a></li><li><a href="#seeAlsoSection">See Also</a></li></ul></div><h2 id="AddNewFile" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Adding a File to the Project</h2><div id="IDBBBSection"><p>To add a new file to a help file builder project, select the project node or the folder within which
you want to add the new item and then select the <strong>Add New Item</strong> option from the <strong>Project</strong> main menu
option or the <strong>Add</strong> | <strong>New Item</strong> option from the selected item's context menu.  To add an existing
item, use the <strong>Existing Item</strong> option from the project menu or context menu instead.</p><figure class="mediaCenter"><img alt="Visual Studio Add New Item dialog" src="../media/VSAddNewItemDlg.png" /></figure><p>The <strong>Add New Item</strong> dialog box, shown above, groups the item templates into various categories.  The
parent category shows all item templates from its subcategories.  Pick a subcategory to further filter the available
selections.  The <strong>Sort by</strong> combo box can be used to change the sort order of the items.  The default sort order
lists the most frequently used file types first followed by the lesser used file types within each subcategory.
Once you have selected the file template, enter a name for it and click the <strong>Add</strong> button to add it to the
project.</p></div><h2 id="CustomTemplates" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Creating Custom Item File Templates</h2><div id="IDCBBSection"><p>Like the standalone GUI, Visual Studio supports custom item file templates for help file builder
projects.  However, they are created differently and are stored in a different location from the templates used
by the standalone GUI.  Follow these steps to create your own custom item file templates.</p><ol><li><p>Create the template file.  Name the file whatever you like and give it an appropriate extension.  The
content of the template file will be used as the default content for the file when it is added to a project.  An
example conceptual content template is shown below:</p><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Tip</p></div><div class="message-body"><p>For conceptual content item templates, replace the topic's GUID value with the text "<span class="code">$guid1$</span>".
This will cause Visual Studio to automatically insert a new GUID value in the topic when it is added to a project.</p></div></article><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Example Template File: BlankTopic.aml</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-c#">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;topic id="$guid1$" revisionNumber="1"&gt;
  &lt;developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink"&gt;

    &lt;introduction&gt;
      &lt;para&gt;Required introduction&lt;/para&gt;
    &lt;/introduction&gt;

    &lt;section address="Section1"&gt;
      &lt;title&gt;Optional section title&lt;/title&gt;
      &lt;content&gt;
        &lt;para&gt;Add one or more sections with content&lt;/para&gt;
      &lt;/content&gt;
    &lt;/section&gt;

    &lt;relatedTopics&gt;
      &lt;!-- Add related topics --&gt;
    &lt;/relatedTopics&gt;
  &lt;/developerConceptualDocument&gt;
&lt;/topic&gt;</code></pre></div></div></li><li><p>In order for Visual Studio to know how to display and use your template file, you must create a
VSTemplate file to accompany it.  This is an XML file with a <em>.vstemplate</em> extension.  The
base filename should match the base filename of your template file (i.e. <em>BlankTopic.vstemplate</em>
for the <em>BlankTopic.aml</em> template file).  An example is shown below:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Example VSTemplate File: BlankTopic.vstemplate</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;VSTemplate Version="3.0.0" Type="Item"
  xmlns="http://schemas.microsoft.com/developer/vstemplate/2005"&gt;

  &lt;TemplateData&gt;
    &lt;!-- This is the name displayed for the template --&gt;
    &lt;Name&gt;Blank Topic&lt;/Name&gt;

    &lt;!-- This is the description displayed for the template --&gt;
    &lt;Description&gt;A blank conceptual topic&lt;/Description&gt;

    &lt;!-- This is the icon displayed for the template.  This example uses
         an icon from the SHFB project package.  If you want to add your
         own icon, use an Icon element as shown in the commented out example
         below instead. --&gt;
    &lt;Icon Package="{c997d569-ee8e-4947-a46f-9a0717ce39a0}" ID="407" /&gt;

    &lt;!-- &lt;Icon&gt;MyTemplateIcon.ico&lt;/Icon&gt; --&gt;

    &lt;!-- This associates the template with the SHFB package --&gt;
    &lt;ProjectType&gt;SHFBProject&lt;/ProjectType&gt;

    &lt;!-- The default filename to use --&gt;
    &lt;DefaultName&gt;BlankTopic.aml&lt;/DefaultName&gt;

    &lt;!-- The sort order of the item.  You can adjust this to have the
         template appear higher or lower in the list when using the
         default sort order. --&gt;
    &lt;SortOrder&gt;10&lt;/SortOrder&gt;

    &lt;!-- Adding this element will cause the template to appear in
         parent categories if they are used.  Adjust the number up if
         you have more than two parent categories. --&gt;
    &lt;NumberOfParentCategoriesToRollUp&gt;2&lt;/NumberOfParentCategoriesToRollUp&gt;
  &lt;/TemplateData&gt;

  &lt;TemplateContent&gt;
    &lt;!-- This defines the project item template file.  The name should
         match the name of the item template you created.  If it contains
         replaceable parameters such as "$guid1$", add the
         ReplaceParameters attribute and set it to "true". --&gt;
    &lt;ProjectItem ReplaceParameters="true"&gt;BlankTopic.aml&lt;/ProjectItem&gt;
  &lt;/TemplateContent&gt;
&lt;/VSTemplate&gt;</code></pre></div></div><p>For the <span class="code">Icon</span> element, you can replace the ID shown in the
example above with one of the following ID numbers to use one of the built-in file type icons.  If you
want to use your own icon, use an element like the commented out example to specify the icon filename.
The icon file should be placed in the same folder as the template file and the VSTemplate file.</p><table class="table is-hoverable"><thead><tr><th><p>ID Number</p></th><th><p>Description</p></th></tr></thead><tr><td><p>401</p></td><td><p>HTML file</p></td></tr><tr><td><p>402</p></td><td><p>Image file</p></td></tr><tr><td><p>403</p></td><td><p>Script file</p></td></tr><tr><td><p>404</p></td><td><p>Stylesheet</p></td></tr><tr><td><p>405</p></td><td><p>Text/general file</p></td></tr><tr><td><p>406</p></td><td><p>XML file</p></td></tr><tr><td><p>407</p></td><td><p>Conceptual content topic</p></td></tr><tr><td><p>408</p></td><td><p>Content layout file</p></td></tr><tr><td><p>409</p></td><td><p>Resource item file</p></td></tr><tr><td><p>410</p></td><td><p>Token file</p></td></tr><tr><td><p>411</p></td><td><p>Code snippets file</p></td></tr></table></li><li><p>Create a <em>.zip</em> archive file containing the template file, the
VSTemplate XML file, and the icon file if you added your own icon.  Store the files in the archive without
paths.</p></li><li><p>Create the folder <em>[My Documents]\Visual Studio XXXX\Templates\ItemTemplates\SHFBProject\</em>
where "<em>[My Documents]</em>" is the location of your personal documents folder and "XXXX" is the
version of Visual Studio into which you want to add the templates.  This is the root folder for your custom help
file builder item template files.</p></li><li><p>To separate your custom templates from the standard item templates, create a subfolder such as
<em>.\Custom Templates</em> beneath the root folder created in the prior step.  This will make it
easy to filter the list to your custom templates.  Additional subfolders can be used to further sub-categorize
the files as needed.  For example, if you want to categorize your templates as conceptual content or other
content, create a <em>.\Conceptual Content</em> and/or <em>.\Other Content</em> subfolder
beneath the custom templates folder.</p></li><li><p>Place the archive file containing your template in the custom templates folder.</p></li><li><p>When you open the <strong>Add New Item</strong> dialog, you should now see your custom templates listed in
the appropriate location.  An example is shown below:</p><figure class="mediaCenter"><img alt="Custom templates in the Add New Item dialog" src="../media/VSCustomTemplates.png" /></figure></li></ol><p>For more information about template files, see the <a href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/s365byhx(v=vs.100)" target="_blank" rel="noopener noreferrer" title="VSTemplate information">Creating Project and Item Templates</a> help topic.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="b128ad2a-787e-48c7-b946-f6953080c386.htm">Visual Studio Integration Package</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Adding a File to the Project</a></li><li><a class="quickLink">Creating Custom Item File Templates</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2023.7.8.0] Copyright © 2006-2023, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>