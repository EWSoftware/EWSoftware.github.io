<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Version 2014.1.26.0 Beta</title><meta name="Title" content="Version 2014.1.26.0 Beta" /><meta name="Help.Id" content="1139ca15-af64-48a2-9187-ccc1aec389d4" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="1139ca15-af64-48a2-9187-ccc1aec389d4" /><meta name="Description" content="The Sandcastle tools are now installed as part of the Sandcastle Help File Builder and there is no longer a separate installer for them. As such, you will need to manually remove the prior release of the Sandcastle tools." /><meta name="tocFile" content="../toc/IDE2.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle Help File Builder" style="height: 69px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle Help File Builder Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="HeaderTextContainer" class="level-left"><div class="level-item"><span class="has-text-grey-light">SHFB Default 2022 Presentation Style - Coming Soon</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Version 2014.1.26.0 Beta</h1><div><p>Release notes for version 2014.1.26.0 Beta</p><ul class="is-hidden-tablet"><li><a href="#BreakingChanges">Breaking Changes</a></li><li><a href="#HelpFileBuilder">Help File Builder</a></li><li><a href="#General">General</a></li><li><a href="#MRefBuilder">MRefBuilder</a></li><li><a href="#BuildAssembler">BuildAssembler and Build Components</a></li><li><a href="#PresentationStyles">Presentation Styles</a></li></ul></div><h2 id="BreakingChanges" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Breaking Changes</h2><div id="IDBABSection"><article class="message is-warning"><div class="message-header"><p><span class="icon"><i class="fa fa-warning"></i></span>  Important</p></div><div class="message-body"><p>The Sandcastle tools are now installed as part of the Sandcastle Help File Builder and there is
no longer a separate installer for them.  As such, you will need to manually remove the prior release of the
Sandcastle tools.  Leaving them installed will not cause any issues as the new release is located in a different
folder.  However, removing them will avoid any confusion in the future.</p></div></article><p>The majority of the following changes will only affect those that have created custom build
components, syntax generators, plug-ins, and presentation styles.  If you have, carefully read the following
items as you will need to update your components to work with the new Managed Extensibility Framework based
implementation.</p><ul><li><p>Consolidated the Sandcastle Help File Builder and Sandcastle tools under a single, common
folder structure.  These changes were necessary in order to simplify deployment and support changes to the
component model.  Although combined, the Sandcastle tools can still be used independently of the help file
builder as in prior releases.</p></li><li><p>Since the tools have been consolidated under a single folder, the <span class="code">DXROOT</span>
environment variable is no longer needed.  All tools now use the common <span class="code">SHFBROOT</span>
environment variable instead where needed.</p></li><li><p>Removed support for the <span class="code">SHFBCOMPONENTROOT</span>
environment variable as its functionality is handled by the new <span class="code">ComponentPath</span> project
property.</p></li><li><p>Updated all build components, syntax generators, plug-ins, and presentation styles so that they
are implemented using the Manged Extensibility Framework (MEF).  A lot of code was moved into a new
<em>Sandcastle.Core</em> library that holds the base classes and MEF implementation classes common to
all of the other projects in the tool set.  This change allows for dynamic discoverability of components at
runtime without the need for special configuration files or file naming conventions.  It also allows for the use
of project-specific components located within a help file project's folder or one that it refers to through the
new <span class="code">ComponentPath</span> property.</p></li><li><p>Presentation styles are now implemented as MEF components as well.  As with the other build
components, this allows for the same dynamic discoverability at runtime and project-specific presentation styles.</p></li><li><p>Changed the syntax generator IDs to their actual language names so that they are displayed
using the language name in the help file builder.  This should be transparent to most projects but if you have
<strong>BuildAssembler</strong> configuration files you will need to update the syntax generator IDs in
them.</p></li><li><p>Switched to a date-based version numbering scheme (YYYY.MM.DD.RR) and updated all tools to use
a common version number.  Changes were also made to the versioning attributes to minimize the need to rebuild
third party components with each new release of the tools.  In future, it should only be necessary to rebuild
third party components if a breaking changes was made requiring an update to the version number used in the
strong name of the dependency assemblies.</p></li><li><p>Removed the example SandcastleGUI project since it is out of date and serves no real purpose
anymore.  Use the Sandcastle Help File Builder standalone GUI or Visual Studio Package instead if you need a
project management system.</p></li><li><p>Removed the Examples folder since they were out of date and cannot be built properly from the
installed location.  I will create better standalone build examples and distribute them separately so that they
can be downloaded and built from a usable location at a later date.</p></li><li><p>Updated several of the tools to allow running them as MSBuild tasks and removed the PowerShell
scripts.  They were out of date and I know very little about PowerShell so support for them would be problematic.
In any event, since the tools have been updated to run as MSBuild tasks, it makes better sense to standardize on
MSBuild projects rather than PowerShell scripts.</p></li><li><p>Removed the <span class="code">SandcastlePath</span> project property and all references to it
as it is no longer needed.  It may show up in the <strong>User Defined Properties</strong> property page.  If so, it can
be removed from there.</p></li><li><p>The help file builder presentation style resource item files have been moved into each
presentation style so that the presentation styles are self-contained.</p></li><li><p>The help file builder stop word list files have been moved into the
<em>Shared\StopWordList</em> folder under the presentation style folder so that the localizable
resources are all in one common location.</p></li><li><p>Removed the <span class="code">ApplyVisibilityProperties</span> build step as visibility
properties are applied to the reflection information by <strong>MRefBuilder</strong> now. The
<span class="code">ApplyVisibilityProperties()</span> method was modified to take a filename so that plug-ins can
use it to remove members from reflection files generated by other means.</p></li><li><p>Moved the <span class="code">TransformReflectionInfo</span> build step to run ahead of the
<span class="code">GenerateNamespaceSummaries</span> build step to allow generation of group topics for use in
the namespace summary editor dialog in a partial build.</p></li><li><p>Redefined the partial build in the build engine to allow stopping it after generating
reflection information or after the document model XSL transformation and grouping options have been applied.</p></li><li><p>The following obsolete and deprecated help file builder build components have been deleted so
that they did not have to updated for use with MEF.  If you still have them in older projects, they will need to
be removed, re-added, and re-configured as needed:</p><ul><li><p><span class="code">CachedCopyFromIndexComponent</span> - Superseded by the base components
and the ESent/SQL caching components.</p></li><li><p><span class="code">CachedResolveReferenceLinksComponent</span> - Superseded by the base
components and the ESent/SQL caching components.</p></li><li><p><span class="code">IntelliSenseComponent</span> - Moved to the <strong>BuildAssembler</strong>
components project.</p></li><li><p><span class="code">MSHelpAttrComponent</span> - Moved to the <strong>BuildAssembler</strong>
components project.</p></li><li><p><span class="code">PostTransformComponent</span> - Code block handling moved to the code
block component and logo support moved to the XSL transformations.</p></li><li><p><span class="code">ShowMissingComponent</span> - Moved to the <strong>BuildAssembler</strong>
components project.</p></li></ul><p>See the prior version release notes for more details.</p></li></ul></div><h2 id="HelpFileBuilder" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Help File Builder</h2><div id="IDCABSection"><ul><li><p>Fixed the project class so that it does not incorrectly try to update the tools version and
mark the project as dirty under Visual Studio 2013.</p></li><li><p>Fixed the <span class="code">BuildHelp</span> task and standalone GUI so that all warnings
regardless of format are output to the console when verbose logging is disabled.</p></li><li><p>Fixed the framework XML comments file enumerator method so that it ignores folders that exist
but contain no XML comments files.</p></li><li><p>Fixed the Sandcastle HTML extract tool so that it finds the <em>HxLink.css</em>
reference regardless of the element's attribute order.</p></li><li><p>Fixed the Version Builder plug-in so that it finds the correct XML comments file when the
<span class="code">GenerateProjectSpecificOutputFolder</span> MSBuild option is used.</p></li><li><p>Fixed the standalone GUI so that it loads per project user state properly.</p></li><li><p>Fixed the build log viewer so that it transforms the log correctly under Visual Studio.</p></li><li><p>Added support for installing and removing MS Help Viewer content in Help Viewer 2.1 from the
standalone GUI and VSPackage.  Updated the example scripts to show how to do it as well.</p></li><li><p>Updated the standalone GUI to use the evaluated output path value if it contains MSBuild
variables.  This allows it to clean and display the output under such conditions.</p></li><li><p>Updated the build engine to run the Sandcastle tools as MSBuild tasks.</p></li><li><p>Added support for a <span class="code">ComponentPath</span> project property used to specify the
location of project-specific build components, syntax generators, plug-ins, and presentation styles.  If not
specified, the project's folder alone is used.</p></li><li><p>Added support for the "No-PIA embedded interop types" visibility option.</p></li><li><p>Exposed the <span class="code">ReferenceOutputAssembly</span> property on project references.
If set to false, the project reference will only be used for MSBuild dependency determination and will not be
used as a reference for <strong>MRefBuilder</strong>.  This allows MSBuild to determine the correct
project build order when building projects in a solution in parallel.</p></li><li><p>Added F# to the standard set of syntax filters to match MSDN.  Note that if you have been
using the standard set (C#, VB.NET, C++), you will gain F# by default. Turn it off in the <span class="code">Syntax
Filters</span> property on the <strong>Help File</strong> properties page if you do not want it included in the
topics.</p></li><li><p>Added namespace grouping support in the form of two new properties located on the <strong>Help
File</strong> property page: <span class="code">NamespaceGrouping</span> and <span class="code">MaximumGroupParts</span>.
Note that the selected presentation style must support namespace grouping for these properties to be effective.
Only the VS2005 and VS2010 styles support namespace grouping in this release.</p></li><li><p>Updated the <strong>Namespace Summaries</strong> dialog to allow editing of namespace group summaries.</p></li><li><p>Deprecated the <strong>Hierarchical TOC</strong> plug-in as its functionality has been replaced by the
namespace grouping options.  It is still available for presentation styles that do not support MS Help Viewer
output or namespace grouping (Prototype and Hana).</p></li><li><p>Removed the <strong>Expand All</strong> button from the website index pages as it was not very useful
and could cause a heavy load on the web server.</p></li><li><p>Applied changes to the web table of contents style from Sam Harwell.</p></li><li><p>Minimized the use of the <span class="code">SHFBROOT</span> environment
variable where possible.  It is still needed in some places to allow for XCOPY deployment of the tools.  It is
possible to run without it defined if you create a <span class="code">SHFBROOT</span> project property that points
to the tools.  See the <a href="50ad2c8c-5004-4b4c-a77f-97b8c403c9f2.htm">XCOPY/NuGet Build Server Deployment</a> topic for details.</p></li><li><p>Added code the VSPackage to allow using a locally defined <span class="code">SHFBROOT</span>
project variable to set the <span class="code">SHFBROOT</span> environment variable if it does
not exist.  This allows using it without the <span class="code">SHFBROOT</span> environment
variable  defined.</p></li><li><p>Added template projects for C# and VB.NET in the <strong>Documentation</strong> subcategory used to
create plug-ins, build components, syntax generators, and presentation style components.  The template code
contains the necessary MEF attribute and/or factory class to produce a valid component.</p></li></ul></div><h2 id="General" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>General</h2><div id="IDDABSection"><ul><li><p>Fixed a bug in the <strong>SegregateByNamespace</strong> tool so that it does not
fail for namespaces containing characters that are not legal in a filename.</p></li><li><p>Added conditions to the two document model transformations to favor
<span class="code">AssemblyInformationalVersionAttribute</span> if present for the version information.
If not, the existing behavior is used (<span class="code">AssemblyVersionAttribute</span> plus
<span class="code">AssemblyFileVersionAttribute</span> value if present).  It was also marked as a required
attribute in the <strong>MRefBuilder</strong> configuration files.</p></li><li><p>Added the <strong>AddNamespaceGroups</strong> tool which adds namespace groups to
the reflection information file.  The grouping information is used to implement the namespace grouping option in
the document model transformations and presentation styles.</p></li><li><p>Deleted several unused transformations from the production transforms folder.</p></li></ul></div><h2 id="MRefBuilder" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>MRefBuilder</h2><div id="IDEABSection"><ul><li><p>Added a workaround to allow documenting the compiler generated public types in WINMD
assemblies that actually represent user code.</p></li><li><p>Fixed a couple of bugs in <strong>MRefBuilder</strong> found while regenerating
the reflection data using the .NETFramework 4.5.1 assemblies and testing it with the .NETCore 4.6 assemblies.</p></li><li><p>Removed the <span class="code">protectedSealed</span> and <span class="code">noPIA</span>
configuration elements from <em>MRefBuilder.config</em>.</p></li><li><p>Added the <span class="code">visibility</span> element to <em>MRefBuilder.config</em>
to control API member visibility in the output.  The options it contains are equivalent to the Sandcastle Help
File Builder options of the same name and are now handled by <strong>MRefBuilder</strong>.</p></li><li><p>Deprecated support for the <span class="code">/internal</span> <span class="code">MRefBuilder</span>
command line option.  The new <span class="code">visibility</span> configuration element provides finer grained
control over member visibility in the output.</p></li><li><p>Added code to output the interop metadata so that the syntax components can add the interop
attributes to the declarations (<span class="code">ComImport</span>, <span class="code">StructLayout</span>,
<span class="code">FieldOffset</span>, <span class="code">PreserveSig</span>, and <span class="code">DllImport</span>).</p></li></ul></div><h2 id="BuildAssembler" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>BuildAssembler and Build Components</h2><div id="IDFABSection"><ul><li><p>Fixed <span class="code">BrandingComponent</span> so that it applies the language specific
text fix-up on elements in syntax sections which the branding transformations miss for some reason.  This was
only noticeable on members and properties that return a nested type and resulted in multiple separators between
the parts of the qualified type name.</p></li><li><p>Applied a patch to <span class="code">ResolveReferenceLinksComponent</span> from Stazzz to
write out nested XML elements within the link's inner XML.</p></li><li><p>Updated <span class="code">IntelliSenseComponent</span> to export code contracts XML
comments elements (<span class="code">requires</span>, <span class="code">ensures</span>,
<span class="code">ensuresOnThrow</span>, <span class="code">pure</span>, <span class="code">invariant</span>,
<span class="code">getter</span>, and <span class="code">setter</span>).</p></li><li><p>Added code to the syntax components to output the interop attributes to the declarations
based on the metadata (<span class="code">ComImport</span>, <span class="code">StructLayout</span>,
<span class="code">FieldOffset</span>, <span class="code">PreserveSig</span>, and <span class="code">DllImport</span>).</p></li><li><p>Deleted <span class="code">ScriptSharpSyntaxGenerator</span>.  The JavaScript syntax
generator has been used in its place for quite some time.</p></li><li><p>The <span class="code">SyntaxComponent</span> is now exposed as a configurable component.
It allows you to enable rendering of reference links in the syntax section and to edit the configuration of those
syntax generators that support it such as the Visual Basic and Visual Basic Usage syntax generators.</p></li></ul></div><h2 id="PresentationStyles" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Presentation Styles</h2><div id="IDGABSection"><ul><li><p>Added namespace grouping support to the VS2005 and VS2010 presentation styles.  When
enabled, it mimics the nested layout of the namespaces on MSDN that have a common root.</p></li><li><p>Fixed the tab border and footer background image handling in the VS2010 style so that they
work in all output formats.</p></li><li><p>Fixed <em>branding.js</em> in VS2010 so that the proper tab is selected when
switching topics in website output.</p></li><li><p>Removed <em>dev10.mshc</em> and extracted the content into the
<em>.\branding</em> folder.  The configuration files reference it from there now.</p></li><li><p>Removed the external link icon from all external links in the VS2010 style.</p></li><li><p>Fixed the incorrect <span class="code">devlang</span> and <span class="code">null</span>
keywords for F# in the VS2010 style.</p></li><li><p>Removed the <span class="code">label</span> attribute from the <span class="code">language</span>
element passed to the XSL Transform Component in the <span class="code">languages</span> parameter as it is not
needed now.</p></li><li><p>Merged the Sandcastle Help File Builder shared content into each presentation style so that
they are self-contained.</p></li><li><p>Moved the stop word lists from the Sandcastle Help File Builder into the
<em>Shared\StopWordList</em> folder in the presentation style project so that all localizable
resources are kept together in one project.</p></li><li><p>Simplified the naming of the help file builder shared content files and stop word lists to
be just the language that they represent.</p></li><li><p>Added a boilerplate <span class="code">threadsafety</span> condition to all presentation
styles used when the <span class="code">threadsafety</span> XML comments element is used without any options.</p></li><li><p>Added <span class="code">async</span>, <span class="code">await</span>, <span class="code">let!</span>,
<span class="code">async/await</span>, and <span class="code">async/let!</span> as <span class="code">langword</span>
options on the <span class="code">see</span> XML comments element in the VS2005 and VS2010 styles.</p></li><li><p>Updated the <strong>BuildAssembler</strong> configuration files to propagate the
<span class="code">preliminary</span> XML comments element from types to all of their members.  This marks all
members of the type as preliminary without having to add the element to each member's comments.</p></li><li><p>Added the <span class="code">maxVersionParts</span> transformation argument to the VS2005
and VS2010 presentation styles.  This is used to specify the maximum number of assembly version parts to show in
API member topics.  Set it to 2, 3, or 4 to limit it to 2, 3, or 4 parts or leave it blank for all parts
including the assembly file version value if specified.</p></li></ul></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="078cc1c7-7995-431e-bf9c-8813becbe8df.htm">Version History</a></div></div></div><div class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Breaking Changes</a></li><li><a class="quickLink">Help File Builder</a></li><li><a class="quickLink">General</a></li><li><a class="quickLink">MRefBuilder</a></li><li><a class="quickLink">BuildAssembler and Build Components</a></li><li><a class="quickLink">Presentation Styles</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.2.6.0] Copyright © 2006-2022, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>