<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Multi-Format Output Component</title><meta name="Title" content="Multi-Format Output Component" /><meta name="Help.Id" content="92a6e678-48fb-4e6c-a7e5-34f264b01212" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="92a6e678-48fb-4e6c-a7e5-34f264b01212" /><meta name="Description" content="The Multi-Format Output Component is used to execute a set of build components to generate help topics for one or more help file formats at the same time with differing configuration options." /><meta name="tocFile" content="../toc/IDO.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle Help File Builder" style="height: 69px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle Help File Builder Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Multi-Format Output Component</h1><div><p>The Multi-Format Output Component is used to execute a set of build components to generate help
topics for one or more help file formats at the same time with differing configuration options.</p></div><div id="IDBABSection" class="noTitle"><p>The following is an example configuration for the Multi-Format Output component. It should be inserted
as the last component in the configuration file.  All subsequent components are nested within it as child
elements, one set for each possible help file format.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Example Configuration</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;!-- Multi-format output component.  This must wrap the component set
 unique to each output file format. --&gt;
&lt;component id="Multi-format Output Component"&gt;
  &lt;!-- This defines the formats to generate --&gt;
  &lt;build formats="{@HelpFileFormat}" /&gt;

  &lt;!-- This defines the set of components for HTML Help 1 files --&gt;
  &lt;helpOutput format="HtmlHelp1"&gt;
    &lt;!-- Add additional header resources --&gt;
    &lt;component id="Additional Header Resources Component"&gt;
      &lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;
      &lt;stylesheet name="../styles/branding-Help1.css" /&gt;
    &lt;/component&gt;

    &lt;!-- Resolve shared content --&gt;
    &lt;component id="Shared Content Component"&gt;
      {@ResourceItemFiles}
    &lt;/component&gt;

    &lt;!-- Resolve conceptual links --&gt;
    &lt;component id="Resolve Conceptual Links Component"&gt;
      &lt;showBrokenLinkText value="true" /&gt;
      &lt;targets base="xmlComp" type="Local" /&gt;
    &lt;/component&gt;

    &lt;!-- Resolve reference links --&gt;
    &lt;component id="Resolve Reference Links Component"&gt;
      &lt;linkTarget value="{@SdkLinkTarget}" /&gt;
      &lt;targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml"
        type="{@HtmlSdkLinkType}" id="FrameworkTargets"&gt;
        {@ReferenceLinkNamespaceFiles}
      &lt;/targets&gt;
      &lt;targets files="reflection.xml" type="Local" id="ProjectTargets" /&gt;
    &lt;/component&gt;

    &lt;!-- Convert language-specific text spans to script elements --&gt;
    &lt;component id="Language-Specific Text Component" /&gt;

    &lt;!-- Save the result --&gt;
    &lt;component id="Save Component"&gt;
      &lt;save base="Output\HtmlHelp1\html" path="concat(/html/head/meta[@name='file']/@content,'.htm')"
        indent="{@IndentHtml}" omit-xml-declaration="true" add-xhtml-namespace="false"
        groupId="Help1 API" boundedCapacity="{@SaveComponentCacheCapacity}" /&gt;
    &lt;/component&gt;
  &lt;/helpOutput&gt;

  &lt;!-- This defines the set of components for MS Help Viewer files --&gt;
  &lt;helpOutput format="MSHelpViewer"&gt;
    &lt;!-- Add additional header resources --&gt;
    &lt;component id="Additional Header Resources Component"&gt;
      &lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;
      &lt;stylesheet name="styles/branding-HelpViewer.css" /&gt;
      {@SearchResultsDisplayVersion}
    &lt;/component&gt;

    &lt;!-- Resolve shared content --&gt;
    &lt;component id="Shared Content Component"&gt;
      {@ResourceItemFiles}
    &lt;/component&gt;

    &lt;!-- Resolve conceptual links --&gt;
    &lt;component id="Resolve Conceptual Links Component"&gt;
      &lt;showBrokenLinkText value="true" /&gt;
      &lt;targets base="xmlComp" type="Id"/&gt;
    &lt;/component&gt;

    &lt;!-- Resolve reference links --&gt;
    &lt;component id="Resolve Reference Links Component"&gt;
      &lt;linkTarget value="{@SdkLinkTarget}" /&gt;
      &lt;targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml"
        type="{@MSHelpViewerSdkLinkType}" id="FrameworkTargets"&gt;
        {@ReferenceLinkNamespaceFiles}
      &lt;/targets&gt;
      &lt;targets files="reflection.xml" type="Id" id="ProjectTargets" /&gt;
    &lt;/component&gt;

    &lt;!-- Add MSHC metadata --&gt;
    &lt;component id="Microsoft Help Viewer Metadata Component"&gt;
      &lt;data topic-version="{@TopicVersion}" toc-file="toc.xml" toc-parent="{@ApiTocParentId}"
        toc-parent-version="{@TocParentVersion}" /&gt;
    &lt;/component&gt;

    &lt;!-- Convert language-specific text spans to script elements --&gt;
    &lt;component id="Language-Specific Text Component" /&gt;

    &lt;!-- Save the result --&gt;
    &lt;component id="Save Component"&gt;
      &lt;save base="Output\MSHelpViewer\html" path="concat(/html/head/meta[@name='file']/@content,'.htm')"
        indent="{@IndentHtml}" omit-xml-declaration="false" add-xhtml-namespace="true"
        groupId="MSHelpViewer API" boundedCapacity="{@SaveComponentCacheCapacity}" /&gt;
    &lt;/component&gt;
  &lt;/helpOutput&gt;

  &lt;!-- This defines the set of components for websites --&gt;
  &lt;helpOutput format="Website"&gt;
    &lt;!-- Add additional header resources --&gt;
    &lt;component id="Additional Header Resources Component"&gt;
      &lt;meta http-equiv="X-UA-Compatible" content="IE=edge" /&gt;
      &lt;stylesheet name="../styles/branding-Website.css" /&gt;
      &lt;script name="../scripts/jquery-3.5.1.min.js" /&gt;
      &lt;script name="../scripts/branding-Website.js" /&gt;
      &lt;script name="../scripts/clipboard.min.js" /&gt;
    &lt;/component&gt;

    &lt;!-- Resolve shared content --&gt;
    &lt;component id="Shared Content Component"&gt;
      {@ResourceItemFiles}
      &lt;!-- This must appear last to override the website ad content item --&gt;
      &lt;content file="WebsiteContent.xml" /&gt;
    &lt;/component&gt;

    &lt;!-- Resolve conceptual links --&gt;
    &lt;component id="Resolve Conceptual Links Component"&gt;
      &lt;showBrokenLinkText value="true" /&gt;
      &lt;targets base="xmlComp" type="Local" /&gt;
    &lt;/component&gt;

    &lt;!-- Resolve reference links --&gt;
    &lt;component id="Resolve Reference Links Component"&gt;
      &lt;linkTarget value="{@SdkLinkTarget}" /&gt;
      &lt;targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml"
        type="{@WebsiteSdkLinkType}" id="FrameworkTargets"&gt;
        {@ReferenceLinkNamespaceFiles}
      &lt;/targets&gt;
      &lt;targets files="reflection.xml" type="Local" id="ProjectTargets" /&gt;
    &lt;/component&gt;

    &lt;!-- Convert language-specific text spans to script elements --&gt;
    &lt;component id="Language-Specific Text Component" /&gt;

    &lt;!-- Save the result --&gt;
    &lt;component id="Save Component"&gt;
      &lt;save base="Output\Website\html" path="concat(/html/head/meta[@name='file']/@content,'.htm')"
        indent="{@IndentHtml}" omit-xml-declaration="true" add-xhtml-namespace="false"
        groupId="Website API" boundedCapacity="{@SaveComponentCacheCapacity}" /&gt;
    &lt;/component&gt;
  &lt;/helpOutput&gt;
&lt;/component&gt;</code></pre></div></div><p>The example given above is taken from the Sandcastle Help File Builder's configuration template file.
When used with it, the replacement tags <span class="code">{@SHFBFolder}</span> and <span class="code">{@OutputFolder}</span>
are used to insert the help file builder's folder and the project's output folder in the file paths.  These are
replaced at build time with the appropriate values.  If using the component in your own build scripts, replace
the tags with a relative or absolute path to the component assembly and output folder respectively.  Likewise,
the other tags are replaced with project values.  Update them with the appropriate settings for your project.</p><p>The <span class="code">build</span> element specifies which help file formats to build.  The
<span class="code">formats</span> attribute should contain a comma separated list of help file formats.  For
example:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;build formats="MSHelpViewer, Website" /&gt;</code></pre></div></div><p>For each possible help file format, a <span class="code">helpOutput</span> element should appear with a
<span class="code">format</span> attribute that matches one of the possible help file formats.  Nested within that
element are the components and their configurations specific to that build format.  If a format is not specified
in the <span class="code">build</span> element, the components for that format are not created and will be ignored
during the build.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="8dcbb69b-7a1a-4049-8e6b-2bf344efbbc9.htm">BuildAssembler Components</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2024.12.15.0] Copyright © 2006-2024, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>