<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Creating Custom Components</title><meta name="Title" content="Creating Custom Components" /><meta name="Help.Id" content="c8258d52-6664-4e96-86cd-6f75a854a69c" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="c8258d52-6664-4e96-86cd-6f75a854a69c" /><meta name="Description" content="In addition to the help file builder project template, component project templates are provided in Visual Studio to create custom build components, plug-ins, syntax generators, and presentation styles. Templates are provided for C# and VB." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle Help File Builder" style="height: 69px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle Help File Builder Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Creating Custom Components</h1><div><p>In addition to the help file builder project template, component project templates are provided in
Visual Studio to create custom build components, plug-ins, syntax generators, and presentation styles.  Templates
are provided for C# and VB.NET and appear in the given language categories in the <strong>Documentation</strong>
subcategory.</p></div><div id="IDBABSection" class="noTitle"><p>The following component project templates are available:</p><ul><li><p><strong>Sandcastle Help File Builder Plug-In</strong> - Create a build process plug-in
used to extend or alter the help file builder build process.</p></li><li><p><strong>BuildAssembler Build Component</strong> - Create a build component for use with
the <strong>BuildAssembler</strong> tool that can alter the topics in some way as they are being
generated.</p></li><li><p><strong>Build Component/Plug-In Configuration Editor</strong> - Create a configuration
editor for a build component or plug-in.  This allows you to configure the component or plug-in interactively
from within the standalone GUI or Visual Studio.  The configuration editor is placed in a separate assembly from
the component or plug-in as the editors are specific to the Windows platform.  This allows the components to
remain platform-neutral and usable with either <strong>MSBuild</strong> or
<strong>dotnet build</strong>.</p></li><li><p><strong>BuildAssembler Syntax Generator</strong> - Create a syntax generator for use
with the <strong>BuildAssembler</strong> <span class="code">SyntaxComponent</span> used to create
declaration or usage syntax sections within topics.</p></li><li><p><strong>Sandcastle Presentation Style Component</strong> - Create a presentation style
component to add a new presentation style used to format the topics.  This template provides a shell into which
you can copy the content files from an existing presentation style or start from scratch and add all new content.</p></li></ul><p>Once the project has been created, see the comments in the template source code for things to do to
implement the given component.  Refer to the related topics in the <strong>See Also</strong> section
below for more information on creating the components.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Common Traits</h2><div id="IDCABSection"><p>All component project templates are set up to generate .NET Standard 2.0 assemblies.  As noted
above, this allows the components to remain platform-neutral and usable with either <strong>MSBuild</strong>
or <strong>dotnet build</strong>.  In addition, the necessary properties are defined to automatically
generate a NuGet package from the build output.</p><p>Each component project has a <em>.\build</em> folder containing a <em>.props</em>
file that defines a single <span class="code">SHFBComponentPath</span> item that equates to the path of the
<em>.\tools</em> folder for the NuGet package.  This allows the help file builder to locate the
component when adding it to the project via the related property page and at build time so that it can be used.</p><p>Additional supporting files can be added to the project such as configuration files or other
content files.  These will be added to the package's <em>.\tools</em> folder as well.  If placed in
subfolders within the project, the folder structure will be retained when compiled into the package.</p><p>The configuration UI project template is the exception to the above.  It is set to generate a
.NET 4.7.2 assembly as it will only be used from the standalone GUI or Visual Studio on the Windows platform.  In
addition, it does not generate a NuGet package.  Instead, you will include the assembly in your component
package as an additional assembly.  Instructions are given in the UI project template example source code and
the build component and plug-in project files on how to do this.  The configuration forms can be created with
Windows Forms or XAML.  An example of each is provided in the template project as a starting point.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="b128ad2a-787e-48c7-b946-f6953080c386.htm">Visual Studio Integration Package</a></div><div><a href="d7b0528c-c75a-477b-9445-db6d2c55dbcb.htm">Debugging Components and Plug-Ins</a></div><div><a href="a14e026e-642f-4ce6-9506-341e57cc3d1f.htm">Creating a Build Process Plug-In</a></div><div><a href="e6d18448-2459-46f1-bbdc-a7db415f2bda.htm">Creating a BuildAssembler Build Component</a></div><div><a href="5e80d139-811c-48ed-9b52-dcd8a3f5aef3.htm">Creating a Syntax Filter Generator Component</a></div><div><a href="baf1dcbc-e9cf-4d71-a770-621e6eaf10a7.htm">Creating a Presentation Style Component</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Common Traits</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.10.15.0] Copyright © 2006-2022, Eric Woodruff, All rights reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20Help%20File%20Builder%20Documentation">Eric Woodruff</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="SHFB"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>