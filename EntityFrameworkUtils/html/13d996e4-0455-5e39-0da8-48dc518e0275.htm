<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DatabaseExtensions.ExecuteMethodNonQueryAsync Method</title><meta name="Title" content="ExecuteMethodNonQueryAsync" /><meta name="Help.Id" content="M:EWSoftware.EntityFramework.DatabaseExtensions.ExecuteMethodNonQueryAsync(Microsoft.EntityFrameworkCore.DbContext,System.Reflection.MethodInfo,System.Object[],System.Threading.CancellationToken)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="EWSoftware.EntityFramework" /><meta name="guid" content="13d996e4-0455-5e39-0da8-48dc518e0275" /><meta name="Description" content="Execute a non-query stored procedure associated with a method on a data context asynchronously and return the stored procedure's return value, number of rows affected, and optionally output parameter values." /><meta name="tocFile" content="../toc/IDBBJ.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">EWSofware Entity Framework Utilities Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Database<wbr />Extensions<span id="LST4B3450D1_0" data-languageSpecificText="cpp=::|nu=."></span>Execute<wbr />Method<wbr />Non<wbr />Query<wbr />Async Method</h1><div class="summary">
             Execute a non-query stored procedure associated with a method on a data context asynchronously and
             return the stored procedure's return value, number of rows affected, and optionally output parameter
             values.
             </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="ae6670d8-b1f2-758e-f985-32797fab9e89.htm">EWSoftware.EntityFramework</a><br /><strong>Assembly:</strong> EWSoftware.EntityFramework (in EWSoftware.EntityFramework.dll) Version: 2025.8.17.0<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/EWSoftware/EntityFrameworkUtils/blob/master/Source/DatabaseExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="https://github.com/EWSoftware/EntityFrameworkUtils/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Task</span>&lt;(<span class="identifier">int</span> RowsAffected, <span class="identifier">int</span> ReturnValue, <span class="identifier">IReadOnlyDictionary</span>&lt;<span class="identifier">string</span>, <span class="identifier">Object</span>&gt; OutputValues)&gt; <span class="identifier">ExecuteMethodNonQueryAsync</span>(
	<span class="keyword">this</span> <span class="identifier">DbContext</span> <span class="parameter">dataContext</span>,
	<span class="identifier">MethodInfo</span> <span class="parameter">methodInfo</span>,
	<span class="identifier">Object</span>?[] <span class="parameter">parameters</span>,
	<span class="identifier">CancellationToken</span> <span class="parameter">cancellationToken</span> = <span class="keyword">default</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/EWSoftware/EntityFrameworkUtils/blob/master/Source/DatabaseExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="https://github.com/EWSoftware/EntityFrameworkUtils/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ExecuteMethodNonQueryAsync</span> ( 
	<span class="parameter">dataContext</span> <span class="keyword">As</span> <span class="identifier">DbContext</span>,
	<span class="parameter">methodInfo</span> <span class="keyword">As</span> <span class="identifier">MethodInfo</span>,
	<span class="parameter">parameters</span> <span class="keyword">As</span> <span class="identifier">Object</span>(),
	Optional <span class="parameter">cancellationToken</span> <span class="keyword">As</span> <span class="identifier">CancellationToken</span> = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">Task</span>(<span class="keyword">Of</span> (RowsAffected As <span class="identifier">Integer</span>, ReturnValue As <span class="identifier">Integer</span>, OutputValues As <span class="identifier">IReadOnlyDictionary</span>(<span class="keyword">Of</span> <span class="identifier">String</span>, <span class="identifier">Object</span>)))</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/EWSoftware/EntityFrameworkUtils/blob/master/Source/DatabaseExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="https://github.com/EWSoftware/EntityFrameworkUtils/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="identifier">Task</span>&lt;<span class="identifier">ValueTuple</span>&lt;<span class="identifier">int</span>, <span class="identifier">int</span>, <span class="identifier">IReadOnlyDictionary</span>&lt;<span class="identifier">String</span>^, <span class="identifier">Object</span>^&gt;^&gt;&gt;^ <span class="identifier">ExecuteMethodNonQueryAsync</span>(
	<span class="identifier">DbContext</span>^ <span class="parameter">dataContext</span>, 
	<span class="identifier">MethodInfo</span>^ <span class="parameter">methodInfo</span>, 
	<span class="keyword">array</span>&lt;<span class="identifier">Object</span>^&gt;^ <span class="parameter">parameters</span>, 
	<span class="identifier">CancellationToken</span> <span class="parameter">cancellationToken</span> = <span class="identifier">CancellationToken</span>()
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button><a href="https://github.com/EWSoftware/EntityFrameworkUtils/blob/master/Source/DatabaseExtensions.cs" target="_blank" rel="noopener noreferrer" class="button is-small is-light" title="View the source code"><span class="icon is-small"><i class="fa fa-file-code"></i></span><span>View Source</span></a><a href="https://github.com/EWSoftware/EntityFrameworkUtils/issues/new" target="_blank" rel="noopener noreferrer" class="button is-small is-light requestExampleLink" title="Request an example for this topic"><span class="icon is-small"><i class="fa fa-comment-dots"></i></span><span>Request Example</span></a></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ExecuteMethodNonQueryAsync</span> : 
        <span class="parameter">dataContext</span> : <span class="identifier">DbContext</span> * 
        <span class="parameter">methodInfo</span> : <span class="identifier">MethodInfo</span> * 
        <span class="parameter">parameters</span> : <span class="identifier">Object</span>[] * 
        ?<span class="parameter">cancellationToken</span> : <span class="identifier">CancellationToken</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">cancellationToken</span> = defaultArg <span class="identifier">cancellationToken</span> new <span class="identifier">CancellationToken</span>()
*)
<span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">ValueTuple</span>&lt;<span class="identifier">int</span>, <span class="identifier">int</span>, <span class="identifier">IReadOnlyDictionary</span>&lt;<span class="identifier">string</span>, <span class="identifier">Object</span>&gt;&gt;&gt; </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">dataContext</span>  <a href="https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext" target="_blank" rel="noopener noreferrer">DbContext</a></dt><dd>The data context on which to execute the stored procedure</dd><dt class="has-text-weight-normal"><span class="parameter">methodInfo</span>  <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noopener noreferrer">MethodInfo</a></dt><dd>The method info for the calling method</dd><dt class="has-text-weight-normal"><span class="parameter">parameters</span>  <span id="LST4B3450D1_1" data-languageSpecificText="cpp=array&lt;"></span><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a><span id="LST4B3450D1_2" data-languageSpecificText="cpp=&gt;|vb=()|nu=[]"></span></dt><dd>Zero or more parameter values to be passed to the stored procedure.  These
             must match the parameter order of the calling data context method.</dd><dt class="has-text-weight-normal"><span class="parameter">cancellationToken</span>  <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a>  (Optional)</dt><dd>An optional cancellation token</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noopener noreferrer">Task</a><span id="LST4B3450D1_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.valuetuple-3" target="_blank" rel="noopener noreferrer">ValueTuple</a><span id="LST4B3450D1_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a>, <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a>, <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2" target="_blank" rel="noopener noreferrer">IReadOnlyDictionary</a><span id="LST4B3450D1_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a><span id="LST4B3450D1_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST4B3450D1_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST4B3450D1_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />A tuple containing the number of rows affected assuming the stored procedure is not using
             <span class="code">SET NOCOUNT ON</span>,  the return value of the stored procedure if any, and a dictionary containing
             any output parameters indexed by method parameter name with the value being the output value from the
             stored procedure.<h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/microsoft.entityframeworkcore.dbcontext" target="_blank" rel="noopener noreferrer">DbContext</a>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDGCSection"><p>The stored procedure name is determined by looking for the
             <a href="cd938775-2ab5-c0d7-2f2f-f578555e54dd.htm">MethodStoredProcedureAttribute</a> on the calling data context method.  If not specified,
             the stored procedure name is assumed to be the same as the calling method's name.  If the method name
             ends with the <a href="a5eeb730-a862-d285-fbb8-599e24e8429e.htm">AsyncMethodSuffix</a> value, the indicated suffix is removed from the method
             name to get the stored procedure name.</p><p>If the connection is not in an open state, it is opened temporarily while executing the stored
             procedure.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDHCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// The stored procedure names are inferred from the method names without the "Async" suffix.

// Execute a stored procedure and return its return value asynchronously
public async int spStockAddAsync(string symbol, string assetDescription,
  decimal currentBid, decimal currentAsk, decimal priceChangePercent)
{
    // When called asynchronously, the parameters must be passed as an array
    // and we must get the method info from the stack trace as we're inside the
    // compiler generated state machine at this point.  We must also specify the
    // stored procedure name in the method attribute if the method name does not
    // match the stored procedure name.
    var methodInfo = (MethodInfo)(new StackTrace().GetFrames().Select(
        frame =&gt; frame.GetMethod()).FirstOrDefault(
            item =&gt; item!.DeclaringType == GetType()) ??
               throw new InvalidOperationException("Unable to get async method info"));

    var result = await this.ExecuteMethodNonQueryAsync(methodInfo, [symbol, assetDescription,
        currentBid, currentAsk, priceChangePercent]);

    return result.ReturnValue;
}

// Execute a stored procedure and return the number of rows affected
public async int spStockDeleteAsync(string symbol)
{
    // When called asynchronously, the parameters must be passed as an array
    // and we must get the method info from the stack trace as we're inside the
    // compiler generated state machine at this point.  We must also specify the
    // stored procedure name in the method attribute if the method name does not
    // match the stored procedure name.
    var methodInfo = (MethodInfo)(new StackTrace().GetFrames().Select(
        f =&gt; f.GetMethod()).FirstOrDefault(m =&gt; m!.DeclaringType == GetType()) ??
            throw new InvalidOperationException("Unable to get async method info"));

    var result = await this.ExecuteMethodNonQueryAsync(methodInfo, [symbol]);

    return result.RowsAffected;
}

// Execute a stored procedure and return the output parameters via the ref parameters on
// the method.  We can also return the stored procedure's return value or rows affected.
public async int spCheckForEmployeeScheduleAsync(string bidGroup, int entityKey,
  ref bool bidGroupScheduled, ref bool entityScheduled)
{
    // When called asynchronously, the parameters must be passed as an array
    // and we must get the method info from the stack trace as we're inside the
    // compiler generated state machine at this point.  We must also specify the
    // stored procedure name in the method attribute if the method name does not
    // match the stored procedure name.
    var methodInfo = (MethodInfo)(new StackTrace().GetFrames().Select(
        f =&gt; f.GetMethod()).FirstOrDefault(m =&gt; m!.DeclaringType == GetType()) ??
            throw new InvalidOperationException("Unable to get async method info"));

    var result = await this.ExecuteMethodNonQueryAsync(methodInfo, [bidGroup, entityKey,
        bidGroupScheduled, entityScheduled]);

    bidGroupScheduled = (bool)result.OutputValues[nameof(bidGroupScheduled);
    entityScheduled = (bool)result.OutputValues[nameof(entityScheduled);

    return result.ReturnValue;
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="314055f1-68a4-4e30-d74c-8fc14f811bca.htm">DatabaseExtensions Class</a></div><div><a href="ae6670d8-b1f2-758e-f985-32797fab9e89.htm">EWSoftware.EntityFramework Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://github.com/EWSoftware/EntityFrameworkUtils" target="_blank" rel="noopener noreferrer">[v2025.7.19.0] Copyright © 2024-2025, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSofware%20Entity%20Framework%20Utilities%20Library%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="EntityFrameworkUtils"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script><script>
		$(".requestExampleLink").each(function ()
		{
			if(this.href.substring(0, 4).toLowerCase() === "http")
				this.href += "?title=";
			else
				this.href += "?subject=EWSofware%20Entity%20Framework%20Utilities%20Library%20Documentation: ";

			this.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
				encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
				"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		});
	</script></body></html>