<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Entity Stored Procedure Attributes</title><meta name="Title" content="Entity Stored Procedure Attributes" /><meta name="Help.Id" content="869efb41-378c-426e-a84a-b014b72d1772" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="869efb41-378c-426e-a84a-b014b72d1772" /><meta name="Description" content="This topic describes the general and stored procedure data annotation attributes that can be applied to entities and their properties." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">EWSofware Entity Framework Utilities Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Entity Stored Procedure Attributes</h1><div><p>This topic describes the general and stored procedure data annotation attributes that can be applied
to entities and their properties.</p><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body"><p>The load all, load by key, insert, update, and delete stored procedure attributes are all derived
from a common base class (<a href="a9849b96-b57c-c650-05e1-c6d81956dd3b.htm">StoredProcedureAttribute</a>).
All take a stored procedure name as the constructor parameter and have an optional
<span class="code">ParameterNamePrefix</span> property that allows you to specify a common parameter name prefix
applied to its parameters.  If specified, it will override any corresponding parameter name prefix defined on the
data context.  If set to an empty string, it will effectively remove the prefix from parameters for the stored
procedure even if one is defined on the data context.</p></div></article><ul class="is-hidden-tablet"><li><a href="#NeverTrack">NeverTrackAttribute</a></li><li><a href="#Ignore">IgnoreAttribute</a></li><li><a href="#LoadAll">LoadAllStoredProcedureAttribute</a></li><li><a href="#LoadByKey">LoadByKeyStoredProcedureAttribute</a></li><li><a href="#Insert">InsertEntityStoredProcedureAttribute</a></li><li><a href="#Update">UpdateEntityStoredProcedureAttribute</a></li><li><a href="#Delete">DeleteEntityStoredProcedureAttribute</a></li></ul></div><h2 id="NeverTrack" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>NeverTrackAttribute</h2><div id="IDBABSection"><p>If change tracking is enabled on a data context, the stored procedure extension methods that load,
insert, update, and delete entities will automatically adjust the entity state with the change tracker.  This
attribute is used to mark an entity type as never tracked so that the stored procedure extension methods do not
alter the change tracking state for it.  This is useful for entities that are not modified and/or do not
implement property change notification and thus do not require change tracking.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">// Used to display state codes in a drop-down list.  This is never modified and does
// not need change tracking.
[NeverTrack]
public sealed class StateCode
{
    // The state code
    public string StateCode { get; set; }

    // The state description
    public string StateDesc { get; set; }
}</code></pre></div></div></div><h2 id="Ignore" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>IgnoreAttribute</h2><div id="IDCABSection"><p>Unlike entities loaded by Entity Framework, the stored procedure extension methods do not require
a one to one mapping between the result set columns and entity properties.  As such, additional properties can
be added to the entities that do not appear in the result set and vice versa.  This attribute can be applied to
entity properties to indicate whether or not they should be included for inserts and/or updates.  It takes two
Boolean parameters, the first for whether or not to include it for inserts, and the second for updates.
Typically, both parameters are set to false but it is possible to set one or the other to true to include the
property for insert or updates if required.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">[LoadAllStoredProcedure("spStateCodes"), InsertStoredProcedure("spStateCodeAddUpdate"),
  UpdateStoredProcedure("spStateCodeAddUpdate"), DeleteStoredProcedure("spStateCodeDelete")]
public sealed class StateCode : ChangeTrackingEntity
{
    // The state code
    [Key]
    public string State
    {
        get;
        set =&gt; this.SetWithNotify(value, ref field);
    } = String.Empty;

    // The state description
    public string StateDesc
    {
        get;
        set =&gt; this.SetWithNotify(value, ref field);
    } = String.Empty;

    // True if in use and cannot be deleted, false if not.  This is an extra column in
    // the load all stored procedure and we'll ignore it for inserts and updates.
    [Ignore(true, true)]
    public bool IsInUse
    {
        get;
        set =&gt; this.SetWithNotify(value, ref field);
    }
}

// Example Load All usage:
using var dataContext = new DemoDatabaseDataContext();

var stateCodes = dc.LoadAll&lt;StateCode&gt;().ToList();</code></pre></div></div></div><h2 id="LoadAll" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>LoadAllStoredProcedureAttribute</h2><div id="IDEABSection"><p>This attribute can be applied to an entity type to define a stored procedure used to load them that
takes no parameters.  The 
<a href="486c722d-58de-ef79-c25c-c0252fbf963c.htm">LoadAll<span id="LSTA7B1191_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEntity<span id="LSTA7B1191_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
extension method uses this attribute to determine the stored procedure it should call.  See the
<span class="code">IgnoreAttribute</span> section above for an example.</p></div><h2 id="LoadByKey" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>LoadByKeyStoredProcedureAttribute</h2><div id="IDFABSection"><p>This attribute can be applied to an entity type to define a stored procedure used to load them
using the values for the key properties defined on the type.  The 
<a href="c2e4dd0d-2461-de63-1fbe-9995579f0dc4.htm">LoadByKey<span id="LSTA7B1191_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEntity<span id="LSTA7B1191_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a>
extension method uses this attribute to determine the stored procedure it should call.  The <span class="code">PrimaryKey</span>
attribute on the type or the <span class="code">Key</span> attributes on the properties are used to determine the
key for the type.  There must be one stored procedure parameter for each key property on the type.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">[LoadByKeyStoredProcedure("spProductInfo"), InsertEntityStoredProcedure("spProductAddUpdate"),
  UpdateEntityStoredProcedure("spProductAddUpdate"), DeleteEntityStoredProcedure("spProductDelete")]
public sealed class ProductInfo : ChangeTrackingEntity
{
    // The primary key
    [Key]
    public int ProductID
    {
        get;
        set =&gt; this.SetWithNotify(value, ref field);
    }

    // Product name
    public string? ProductName
    {
        get;
        set =&gt; this.SetWithNotify(value, ref field);
    }

    ...
}

// Example Load By Key usage:
using var dataContext = new DemoDatabaseDataContext();

var productInfo = dc.LoadByKey&lt;ProductInfo&gt;(productID).Single();

// Add a new entity
var newProduct = new ProductInfo { ProductName = "New Product" };

dataContext.InsertEntity(newProduct);

// Update an existing entity
productInfo.ProductName = "Updated Product";

dataContext.UpdateEntity(productInfo);

// Delete an entity
dataContext.DeleteEntity(productInfo);

// Since change tracking is enabled, we could also have just submitted the changes:
// dataContext.SubmitChanges&lt;ProductInfo&gt;();</code></pre></div></div></div><h2 id="Insert" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>InsertEntityStoredProcedureAttribute</h2><div id="IDGABSection"><p>This attribute is used to specify the stored procedure used to insert entities for the associated
type.  The stored procedure should have one or more parameters representing all of the properties
on the entity type except those marked with an <span class="code">IgnoreAttribute</span> for inserts.  It should
not return a value or a result set.  Parameters related to properties that are part of the primary key
or are marked with the <span class="code">TimestampAttribute</span> are defined as input/out parameters.  All
other parameters are input only.  See the <span class="code">LoadByKeyAttribute</span> section above for an example.</p></div><h2 id="Update" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>UpdateEntityStoredProcedureAttribute</h2><div id="IDHABSection"><p>This attribute is used to specify the stored procedure used to update entities for the associated
type.  The stored procedure should have one or more parameters representing all of the properties
on the entity type except those marked with an <span class="code">IgnoreAttribute</span> for updates.  It should
not return a value or a result set.  Parameters marked with the <span class="code">TimestampAttribute</span> are
defined as input/out parameters.  All other parameters are input only.  See the <span class="code">LoadByKeyAttribute</span>
section above for an example.</p></div><h2 id="Delete" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>DeleteEntityStoredProcedureAttribute</h2><div id="IDIABSection"><p>This attribute is used to specify the stored procedure used to delete entities for the associated
type.  The stored procedure should have one or more parameters representing the key columns on the entity type
identified with a <span class="code">PrimaryKeyAttribute</span> or one or more properties with a
<span class="code">KeyAttribute</span> or defined by the data context.  It should not return a value or a result
set.  All parameters are input only.  See the <span class="code">LoadByKeyAttribute</span> section above for an
example.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="48c2006f-d738-40a1-a486-d53fbdf7208c.htm">Welcome</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">NeverTrackAttribute</a></li><li><a class="quickLink">IgnoreAttribute</a></li><li><a class="quickLink">LoadAllStoredProcedureAttribute</a></li><li><a class="quickLink">LoadByKeyStoredProcedureAttribute</a></li><li><a class="quickLink">InsertEntityStoredProcedureAttribute</a></li><li><a class="quickLink">UpdateEntityStoredProcedureAttribute</a></li><li><a class="quickLink">DeleteEntityStoredProcedureAttribute</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://github.com/EWSoftware/EntityFrameworkUtils" target="_blank" rel="noopener noreferrer">[v2024.12.29.0] Copyright © 2024, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSofware%20Entity%20Framework%20Utilities%20Library%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="EntityFrameworkUtils"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>