<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>General Data Context Extension Methods</title><meta name="Title" content="General Data Context Extension Methods" /><meta name="Help.Id" content="9ce27e28-5613-49fb-a98c-38c289f7905e" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="9ce27e28-5613-49fb-a98c-38c289f7905e" /><meta name="Description" content="This topic describes the general data context extension methods." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">EWSofware Entity Framework Utilities Library Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>General Data Context Extension Methods</h1><div><p>This topic describes the general data context extension methods.</p><ul class="is-hidden-tablet"><li><a href="#NoTracking">NoTracking</a></li><li><a href="#Open">Open / OpenAsync</a></li><li><a href="#HasChanges">HasChanges</a></li><li><a href="#GetCommand">GetCommand</a></li><li><a href="#CheckAndUpdateKeys">CheckAndUpdateKeys</a></li></ul></div><h2 id="NoTracking" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>NoTracking</h2><div id="IDBABSection"><p>This extension method is used to turn off query tracking in a data context when constructed or
later.  This can improve performance if all you are doing is reading data without any updates.  It can be chained
together with the <span class="code">Open</span> extension method described below to open the connection at the
same time.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">using var dataContext = new MyDbContext().NoTracking();

... Execute commands ...

using var dataContext = new MyDbContext().NoTracking().Open();

... Execute commands ...</code></pre></div></div></div><h2 id="Open" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Open / OpenAsync</h2><div id="IDCABSection"><p>This extension method and its asynchronous counterpart are used to open a connection on a data
context when constructed or later.  It can be chained together with the <span class="code">NoTracking</span>
extension method described above to turn off change tracking at the same time.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">using var dataContext = new MyDbContext().Open();

... Execute commands ...

using var dataContext = new MyDbContext().NoTracking().Open();

... Execute commands ...

using var dataContext = await new MyDbContext().NoTracking().OpenAsync(cts.Token);

... Execute commands ...</code></pre></div></div></div><h2 id="HasChanges" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>HasChanges</h2><div id="IDDABSection"><p>This extension method can be used to see if a data context has any unsaved changes.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">if(dataContext.HasChanges())
    dataContext.SaveChanges();</code></pre></div></div></div><h2 id="GetCommand" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>GetCommand</h2><div id="IDEABSection"><p>This extension method is used to get a command object in a state ready to execute the specified
command text on the given data context.  The command will be associated with the connection from the data context
instance on which this method is called with the command timeout set to the value from the data context if one
has been set.  The command text can be a stored procedure with or without parameters or a literal SQL statement.
The returned command is ready to execute or modify further with parameters.  This is useful for situations in
which a <span class="code">SqlDataReader</span> is needed, you need more control when executing a stored
procedure, or the stored procedure returns multiple result sets.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using var dataContext = new MyDbContext().NoTracking();

// Set up the daily schedule command and data adapter
var cmdDailySchedule = dc.GetCommand("spDailyScheduleInfo",
    new SqlParameter("@paramBidGroup", SqlDbType.Char, 4),
    new SqlParameter("@paramDate", SqlDbType.DateTime));

var daDailySchedule = new SqlDataAdapter(cmdDailySchedule);</code></pre></div></div></div><h2 id="CheckAndUpdateKeys" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>CheckAndUpdateKeys</h2><div id="IDFABSection"><p>This extension method is used to check for null keys or incomplete rows added by controls and
either remove them or update them based on the passed in delegate methods.  In certain cases, some list controls
like data grids add a temporary row for new additions.  If the row is left without saving changes or the changes
are cancelled, the row is not always removed and still exists when changes are saved.  Because it has null keys
or missing values, it should not be kept.  This extension method can be used to find such rows and remove them.
It can also be used to update keys or other fields in new or existing rows if necessary.</p><p>The <span class="code">nullKeyCheck</span> function delegate is used to check for these incomplete
rows.  If it returns true, the row is assumed to be an empty row and is detached.  If it returns false or is not
specified, the <span class="code">updateKeys</span> action delegate is called to update keys or other fields as
needed.  If one is not specified, no further action is taken.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">// If a list control added a row but left it incomplete, delete it.  If not, update the parent key.
dataContext.CheckAndUpdateKeys&lt;ChildTable&gt;(
    (entity, state) =&gt; state == EntityState.Added &amp;&amp; entity.GroupId == null,
    (entity, state) =&gt; entity.ParentId = parent.ParentId);</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="48c2006f-d738-40a1-a486-d53fbdf7208c.htm">Welcome</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">NoTracking</a></li><li><a class="quickLink">Open / OpenAsync</a></li><li><a class="quickLink">HasChanges</a></li><li><a class="quickLink">GetCommand</a></li><li><a class="quickLink">CheckAndUpdateKeys</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p><a href="https://github.com/EWSoftware/EntityFrameworkUtils" target="_blank" rel="noopener noreferrer">[v2025.8.22.0] Copyright © 2024-2025, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSofware%20Entity%20Framework%20Utilities%20Library%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div id="AdContent" class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="EntityFrameworkUtils"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>