<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>overloads</title><meta name="Help.Id" content="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /><meta name="Description" content="This element is used to define the content that should appear on the auto-generated overloads topic for a given set of member overloads." /><meta name="tocFile" content="../toc/IDJ.xml" /><link type="text/css" rel="stylesheet" href="../css/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle XML Comments Guide" style="height: 50px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle XML Comments Guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><div id="HeaderPrelimContainer" class="level my-1 px-2"><div id="HeaderTextContainer" class="level-left"><div class="level-item"><span class="has-text-grey-light">SHFB Default 2022 Presentation Style - Coming Soon</span></div></div></div><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>overloads</h1><div><p>This element is used to define the content that should appear on the auto-generated overloads topic
for a given set of member overloads.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Syntax</h2><div id="IDBABSection"><p>This top-level element is valid on any overloaded member.  However, it should only appear on one
of the members in each overload set.  The member on which the element appears should have its own set of
member-specific XML comments as well.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">overloads</span><span class="highlight-xml-bracket">&gt;</span>description<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">overloads</span><span class="highlight-xml-bracket">&gt;</span>

or

<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">overloads</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">summary</span><span class="highlight-xml-bracket">&gt;</span>
  Summary description
  <span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">summary</span><span class="highlight-xml-bracket">&gt;</span>
  [<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">remarks</span><span class="highlight-xml-bracket">&gt;</span>Optional remarks<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">remarks</span><span class="highlight-xml-bracket">&gt;</span>]
  [<span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span>Optional examples<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">example</span><span class="highlight-xml-bracket">&gt;</span>]
  [... other top-level comments elements as needed ...]
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">overloads</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div><p>In its simplest form, the element contains a description that will appear as the summary in the
auto-generated overloads member topic.  The expanded form allows you to include any top-level XML comments
elements as you would on a standard member.  These elements will be formatted in an identical fashion and will
appear in the auto-generated overloads member topic.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCABSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel"><pre xml:space="preserve"><span class="highlight-comment">// Simple overloads form</span>

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This is used to sum an enumerable list of values</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="values"&gt;The values to sum&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The sum of the values&lt;/returns&gt;</span>
<span class="highlight-comment">/// &lt;overloads&gt;There are two overloads for this method&lt;/overloads&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> SumValues(IEnumerable&lt;<span class="highlight-keyword">int</span>&gt; values)
{
    <span class="highlight-keyword">return</span> values.Sum(v =&gt; v);
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This is used to sum two enumerable list of values</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="firstValues"&gt;The first set of values to sum&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="secondValues"&gt;The second set of values to sum&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The sum of the values from both enumerable lists&lt;/returns&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">int</span> SumValues(IEnumerable&lt;<span class="highlight-keyword">int</span>&gt; firstValues, IEnumerable&lt;<span class="highlight-keyword">int</span>&gt; secondValues)
{
    <span class="highlight-keyword">return</span> firstValues.Sum(v =&gt; v) + secondValues.Sum(v =&gt; v);
}

<span class="highlight-comment">// Expanded overloads form</span>

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This is used to average an enumerable list of values</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="values"&gt;The values to average&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The average of the values&lt;/returns&gt;</span>
<span class="highlight-comment">/// &lt;overloads&gt;</span>
<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// These methods are used to compute the average of enumerable lists of values</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;remarks&gt;</span>
<span class="highlight-comment">/// These methods serve no other purpose than to demonstrate the use of the</span>
<span class="highlight-comment">/// &lt;c&gt;overloads&lt;/c&gt; XML comments element.</span>
<span class="highlight-comment">/// &lt;/remarks&gt;</span>
<span class="highlight-comment">/// &lt;example&gt;</span>
<span class="highlight-comment">/// &lt;code language="cs"&gt;</span>
<span class="highlight-comment">/// SampleClass sc = new SampleClass(0);</span>
<span class="highlight-comment">/// </span>
<span class="highlight-comment">/// Console.WriteLine("Average: {0}", sc.Average(new[] { 1, 2, 3, 4 }));</span>
<span class="highlight-comment">/// Console.WriteLine("Average: {0}", sc.Average(new[] { 1, 2, 3, 4 },</span>
<span class="highlight-comment">///     new[] { 10, 20, 30, 40}));</span>
<span class="highlight-comment">/// &lt;/code&gt;</span>
<span class="highlight-comment">/// &lt;/example&gt;</span>
<span class="highlight-comment">/// &lt;/overloads&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">double</span> AverageValues(IEnumerable&lt;<span class="highlight-keyword">double</span>&gt; values)
{
    <span class="highlight-keyword">return</span> values.Average(v =&gt; v);
}

<span class="highlight-comment">/// &lt;summary&gt;</span>
<span class="highlight-comment">/// This is used to get the average of two enumerable list of values</span>
<span class="highlight-comment">/// &lt;/summary&gt;</span>
<span class="highlight-comment">/// &lt;param name="firstValues"&gt;The first set of values to average&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;param name="secondValues"&gt;The second set of values to average&lt;/param&gt;</span>
<span class="highlight-comment">/// &lt;returns&gt;The average of the values from both enumerable lists&lt;/returns&gt;</span>
<span class="highlight-comment">/// &lt;conceptualLink target="5b11b235-2b6c-4dfc-86b0-2e7dd98f2716" /&gt;</span>
<span class="highlight-keyword">public</span> <span class="highlight-keyword">double</span> AverageValues(IEnumerable&lt;<span class="highlight-keyword">double</span>&gt; firstValues,
  IEnumerable&lt;<span class="highlight-keyword">double</span>&gt; secondValues)
{
    <span class="highlight-keyword">return</span> firstValues.Concat(secondValues).Average(v =&gt; v);
}</pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="7dbadafe-ffb0-ce53-0523-42293588e49f.htm">SumValues</a></div><div><a href="53c969f8-613a-f23a-91e4-25963d33c228.htm">AverageValues</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="9341fdc8-1571-405c-8e61-6a6b9b601b46.htm">Miscellaneous Elements</a></div></div></div><div class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Syntax</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.4.16.0] Sandcastle XML Comments Guide</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20XML%20Comments%20Guide">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="XMLCommentsGuide"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks()

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>