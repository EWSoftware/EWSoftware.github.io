<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>see</title><meta name="Title" content="see" /><meta name="Help.Id" content="983fed56-321c-4daf-af16-e3169b28ffcd" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="983fed56-321c-4daf-af16-e3169b28ffcd" /><meta name="Description" content="This element is used to create an inline link to another API topic or an external website within the text in which it occurs. It can also be used to apply language-specific formatting to a limited set of keywords." /><meta name="tocFile" content="../toc/IDI.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/SHFB"><img alt="Sandcastle XML Comments Guide" style="height: 50px;" src="../icons/Sandcastle.jpg" /></a></div><div id="DocumentationTitle" class="level-item">Sandcastle XML Comments Guide</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>see</h1><div><p>This element is used to create an inline link to another API topic or an external website within the
text in which it occurs.  It can also be used to apply language-specific formatting to a limited set of keywords.</p><ul class="is-hidden-tablet"><li><a href="#Syntax">Syntax</a><ul><li><a href="#CodeReference">Code Reference</a></li><li><a href="#ExternalRef">External Reference</a></li><li><a href="#LangWord">Language Keyword Formatting</a></li></ul></li><li><a href="#Remarks">Remarks</a></li><li><a href="#Examples">Examples</a></li><li><a href="#seeAlsoSection">See Also</a></li></ul></div><h2 id="Syntax" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Syntax</h2><div id="IDBABSection"><p>This inline element can be used within any other element.  Any of the following formats may be used
based on the need.</p><h4 id="CodeReference" class="quickLinkHeader">Code Reference</h4><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;see cref="member" [qualifyHint="true"] [autoUpgrade="true"] /&gt;

or

&lt;see cref="member" [autoUpgrade="true"]&gt;inner text&lt;/see&gt;</code></pre></div></div><p>The code reference form uses a <span class="code">cref</span> attribute to specify the
member name to which the link should be connected.  The compiler will check that the target member name exists
and will generate a warning if it is not found.  The member name does not have to be fully qualified as long as
the reference is within the containing class or if the appropriate <span class="code">using</span>
(<span class="code">Imports</span> in VB) statements are present.</p><p>If the self-closing form is used, the inner text of the link will be set to the member name
without a namespace or type qualifier.  You can specify inner text on the element to use an alternate value for
the link text or to add a qualifying namespace or type to the member name.  By adding the
<span class="code">qualifyHint</span> attribute and setting it to true, you can indicate that the inner text
should be qualified.  Type names are fully qualified with their namespace.  Class members are qualified with
their class name.</p><p>When specifying type, field, property, event, and non-overloaded method names, the name alone
will suffice as the <span class="code">cref</span> attribute value.  However, when referencing overloaded methods,
you must supply parameter type information to help the compiler determine to which overload you are referring.
The parameter type names are enclosed in parentheses and can be specified using the types for the language being
used (i.e. <span class="code">int</span> or <span class="code">string</span> for C# or <span class="code">Integer</span>
or <span class="code">String</span> for VB).  They can also be specified using the .NET Framework type names such
as <span class="code">Int32</span>, <span class="code">System.Int32</span>, etc.  If an overload takes no
parameters, just specify an empty set of parentheses.  If you want to link to the auto-generated member overloads
help topic, you can specify the <span class="code">autoUpgrade</span> attribute.  If set to false or omitted, the
link will take you directly to the referenced member.  If set to true and the method has overloads, the link will
take you to the method overloads page instead.  If the method has no overloads, it works the same as	if set to
false and it takes you to the method page.  This is equivalent to the same attribute on the MAML
<span class="code">codeEntityReference</span> element.  Another alternative is to use the fully qualified member
name with an "<span class="code">O:</span>" prefix.  See the <a href="#Examples">Method Overload Examples</a>
below for details.</p><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Tip</p></div><div class="message-body"><p>To link to the root namespace container page, use the ID <span class="code">R:Project_[HtmlHelpName]</span>
where "<span class="code">[HtmlHelpName]</span>" is the value of your project's HTML Help Name property with
spaces replaced by underscores. Use the <strong>Entity References</strong> tool window to search for the ID if in doubt
about its value.</p></div></article><h4 id="ExternalRef" class="quickLinkHeader">External Reference</h4><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"] /&gt;

or

&lt;see href="url" [target="_blank | _self | _parent | _top"]
    [alt="alternate text"]&gt;inner text&lt;/see&gt;</code></pre></div></div><p>The external reference form is a customization implemented by Sandcastle.  It uses an
<span class="code">href</span> attribute to specify the URL of an external website or resource to which the link
should be connected.  If the self-closing form is used, the inner text of the link will be set to the URL.  You
can specify inner text on the element to use an alternate value for the link text.</p><p>The optional <span class="code">target</span> attribute can be used to specify where the
content will be opened.  If not specified, <span class="code">_blank</span> is used to open the content in a new
browser window.  The <span class="code">_self</span> option can be used to replace the current topic with the
content of the target URL.  The <span class="code">_parent</span> and <span class="code">_top</span> options can be
used to force the content to be displayed in the parent frame or full window if the current topic is hosted in
one of those manners.</p><p>The optional <span class="code">alt</span> attribute can be used to specify alternate text to
display for the link's tooltip when the mouse hovers over it.  If not specified, no alternate text is added for
the tooltip.</p><h4 id="LangWord" class="quickLinkHeader">Language Keyword Formatting</h4><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-xml">&lt;see langword="null | Nothing | nullptr | static | shared | virtual |
    Overridable | true | True | false | False | abstract | MustInherit |
    sealed | NotInheritable | async | await | async/await | Async | Await |
    Async/Await | let! | async/let!" /&gt;</code></pre></div></div><p>The language keyword formatting form uses a <span class="code">langword</span> attribute to
specify a language keyword that will receive special handling when the topic is viewed.  When one of the noted
keywords is used, the keyword text displayed is based on the language selected in the language filter if the
presentation style has one.  If a keyword other than one of those listed is specified, it is passed through with
no special formatting or handling.</p></div><h2 id="Remarks" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDCABSection"><p>Use this element to insert an inline link.  Use the <a href="16cdb957-a35b-4c17-bf5e-ea511b0218e3.htm">seealso</a>
element to insert a link in the <strong>See Also</strong> section of the topic.</p></div><h2 id="Examples" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Examples</h2><div id="IDDABSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Code Reference Examples</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">/// &lt;summary&gt;
/// This event is raised when something interesting happens.
/// &lt;/summary&gt;
/// &lt;remarks&gt;&lt;para&gt;The &lt;see cref="OnSomethingHappened"/&gt; method is used to
/// raise this event.  This event uses the general &lt;see cref="EventHandler"/&gt;
/// delegate that passes &lt;see cref="EventArgs.Empty"&gt;EventArgs.Empty&lt;/see&gt;
/// to the handlers.&lt;/para&gt;
/// 
/// &lt;para&gt;Alternate &lt;c&gt;see&lt;/c&gt; syntax: &lt;see cref="EventArgs.Empty" qualifyHint="true"/&gt;&lt;/para&gt;
/// &lt;/remarks&gt;
/// &lt;seealso cref="EventArgs"/&gt;
/// &lt;seealso cref="EventArgs.Empty"/&gt;
/// &lt;seealso cref="EventArgs.Empty" qualifyHint="true"/&gt;
/// &lt;seealso cref="EventHandler"/&gt;
/// &lt;seealso cref="OnSomethingHappened"&gt;XMLCommentsExamples.SampleClass.OnSomethingHappened&lt;/seealso&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public event EventHandler SomethingHappened;

/// &lt;summary&gt;
/// This is a protected virtual method used to raise the
/// &lt;see cref="SomethingHappened"/&gt; event.
/// &lt;/summary&gt;
/// &lt;seealso cref="SomethingHappened"/&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
protected virtual void OnSomethingHappened()
{
    var handler = SomethingHappened;

    if(handler != null)
        handler(this, EventArgs.Empty);
}</code></pre></div></div><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Method Overload Examples</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">/// &lt;summary&gt;
/// This version of the method takes no parameters.
/// &lt;/summary&gt;
/// &lt;remarks&gt;&lt;para&gt;To see all overloads, refer to the
/// &lt;see cref="DoSomething()" autoUpgrade="true" /&gt; topic.&lt;/para&gt;
/// 
/// &lt;para&gt;Other overloads:&lt;/para&gt;
/// 
/// &lt;list type="bullet"&gt;
///   &lt;item&gt;
///     &lt;description&gt;&lt;see cref="DoSomething(int)"/&gt;&lt;/description&gt;
///   &lt;/item&gt;
///   &lt;item&gt;
///     &lt;description&gt;&lt;see cref="DoSomething(string)"/&gt;&lt;/description&gt;
///   &lt;/item&gt;
///   &lt;item&gt;
///     &lt;description&gt;&lt;see cref="DoSomething(int, string)"/&gt;&lt;/description&gt;
///   &lt;/item&gt;
/// &lt;/list&gt;
/// 
/// &lt;para&gt;Alternate syntax to link to the overloads topic:
/// &lt;see cref="O:XMLCommentsExamples.SampleClass.DoSomething"&gt;DoSomething
/// Overloads&lt;/see&gt;&lt;/para&gt;
/// &lt;/remarks&gt;
/// &lt;overloads&gt;This method has four overloads&lt;/overloads&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public void DoSomething()
{
}

/// &lt;summary&gt;
/// This version of the method takes an integer parameter.
/// &lt;/summary&gt;
/// &lt;param name="number"&gt;A number to use&lt;/param&gt;
/// &lt;seealso cref="DoSomething()" autoUpgrade="true" /&gt;
/// &lt;seealso cref="DoSomething()" /&gt;
/// &lt;seealso cref="DoSomething(string)" /&gt;
/// &lt;seealso cref="DoSomething(int, string)" /&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public void DoSomething(int number)
{
}

/// &lt;summary&gt;
/// This version of the method takes a string parameter.
/// &lt;/summary&gt;
/// &lt;param name="text"&gt;A text value to use&lt;/param&gt;
/// &lt;seealso cref="DoSomething()"/&gt;
/// &lt;seealso cref="DoSomething(int)"/&gt;
/// &lt;seealso cref="DoSomething(int, string)"/&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public void DoSomething(string text)
{
}

/// &lt;summary&gt;
/// This version of the method takes both an integer and a string parameter.
/// &lt;/summary&gt;
/// &lt;param name="number"&gt;A number to use&lt;/param&gt;
/// &lt;param name="text"&gt;A text value to use&lt;/param&gt;
/// &lt;seealso cref="DoSomething()"/&gt;
/// &lt;seealso cref="DoSomething(int)"/&gt;
/// &lt;seealso cref="DoSomething(string)"/&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public void DoSomething(int number, string text)
{
}</code></pre></div></div><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">External Reference Examples</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">/// &lt;summary&gt;
/// This is used to demonstrate the external reference type of &lt;c&gt;see&lt;/c&gt;
/// and &lt;c&gt;seealso&lt;/c&gt; elements.
/// &lt;/summary&gt;
/// &lt;remarks&gt;
/// &lt;list type="bullet"&gt;
///   &lt;item&gt;
///     &lt;description&gt;Basic link: &lt;see href="https://GitHub.com/EWSoftware/SHFB"/&gt;&lt;/description&gt;
///   &lt;/item&gt;
///   &lt;item&gt;
///     &lt;description&gt;Link with target: &lt;see href="https://GitHub.com/EWSoftware/SHFB/wiki"
///       target="_self" /&gt;&lt;/description&gt;
///   &lt;/item&gt;
///   &lt;item&gt;
///     &lt;description&gt;Link with alternate text: &lt;see href="https://GitHub.com/EWSoftware/issues"
///       alt="Discuss SHFB on GitHub" /&gt;&lt;/description&gt;
///   &lt;/item&gt;
///   &lt;item&gt;
///     &lt;description&gt;Link with inner text: &lt;see href="https://GitHub.com/EWSoftware/SHFB"&gt;
///       SHFB on GitHub&lt;/see&gt;&lt;/description&gt;
///   &lt;/item&gt;
/// &lt;/list&gt;
/// &lt;para&gt;Equivalent &lt;c&gt;seealso&lt;/c&gt; links are shown below.&lt;/para&gt;
/// &lt;/remarks&gt;
/// &lt;seealso href="https://GitHub.com/EWSoftware/SHFB"/&gt;
/// &lt;seealso href="https://GitHub.com/EWSoftware/SHFB/wiki" target="_self" /&gt;
/// &lt;seealso href="https://GitHub.com/EWSoftware/SHFB/issues" alt="Discuss SHFB on GitHub" /&gt;
/// &lt;seealso href="https://GitHub.com/EWSoftware/SHFB"&gt;SHFB on GitHub&lt;/seealso&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
/// &lt;conceptualLink target="16cdb957-a35b-4c17-bf5e-ea511b0218e3" /&gt;
public void SeeElementExternalExample()
{
}</code></pre></div></div><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">Language Keyword Examples</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">/// &lt;summary&gt;
/// This demonstrates the &lt;c&gt;see&lt;/c&gt; element's &lt;c&gt;langword&lt;/c&gt; form
/// &lt;/summary&gt;
/// &lt;returns&gt;This method is &lt;see langword="static" /&gt; and always returns
/// &lt;see langword="null"/&gt;.&lt;/returns&gt;
/// &lt;conceptualLink target="983fed56-321c-4daf-af16-e3169b28ffcd" /&gt;
public static string SeeLangWordExamples()
{
    return null;
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4 class="quickLinkHeader">Reference</h4><div><a href="82e685e9-d6c3-ac36-b61f-a644ae99516e.htm">SomethingHappened</a></div><div><a href="8656e14a-9f38-16d5-de9f-e5edd7bd3a5b.htm">OnSomethingHappened</a></div><div><a href="9cf4a679-3cd5-cb16-e520-78668c3a54c3.htm">SeeElementExternalExample</a></div><div><a href="db2af31b-f17c-302d-05d0-c3c18d8b450f.htm">SeeLangWordExamples</a></div><div><a href="3899aa6a-a42b-02b0-19f9-d45cf558b8bd.htm">DoSomething</a></div><h4 class="quickLinkHeader">Other Resources</h4><div><a href="d297bc14-33aa-4152-ae36-9f658b15de87.htm">Inline Elements</a></div><div><a href="16cdb957-a35b-4c17-bf5e-ea511b0218e3.htm">seealso</a></div><div><a href="db2703b4-12bc-4cf5-8642-544b41002809.htm">conceptualLink</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Syntax</a><ul class="menu"><li><a class="quickLink">Code Reference</a></li><li><a class="quickLink">External Reference</a></li><li><a class="quickLink">Language Keyword Formatting</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Examples</a></li><li><a class="quickLink">See Also</a><ul class="menu"><li><a class="quickLink">Reference</a></li><li><a class="quickLink">Other Resources</a></li></ul></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://GitHub.com/EWSoftware/SHFB" target="_blank" rel="noopener noreferrer">[v2022.4.16.0] Sandcastle XML Comments Guide</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=Sandcastle%20XML%20Comments%20Guide">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="XMLCommentsGuide"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>