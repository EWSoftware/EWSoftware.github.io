<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Recurrence Pattern Generation</title><meta name="Title" content="Recurrence Pattern Generation" /><meta name="Help.Id" content="3f7e1bcc-3afe-4978-95e7-e6515eae45df" /><meta name="Help.ContentType" content="Concepts" /><meta name="guid" content="3f7e1bcc-3afe-4978-95e7-e6515eae45df" /><meta name="Description" content="This topic describes the interactions of the various recurrence rule parts with the recurrence frequencies." /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><a target="_blank" rel="noopener noreferrer" href="https://github.com/EWSoftware/PDI"><img alt="EWSoftware.PDI Library" src="../icons/EWSPDI.bmp" /></a></div><div id="DocumentationTitle" class="level-item">EWSoftware.PDI Namespace Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Recurrence Pattern Generation</h1><div><p>This topic describes the interactions of the various recurrence rule parts with the recurrence
frequencies.</p><ul class="is-hidden-tablet"><li><a href="#Overview">Overview</a></li><li><a href="#IntervalDuration">Recurrence Interval and Duration</a></li><li><a href="#FreqRuleInt">Frequency and Rule Part Interactions</a></li><li><a href="#MonthlyFreq">MONTHLY Frequency Notes</a></li><li><a href="#YearlyFreq">YEARLY Frequency Notes</a></li><li><a href="#BySetPos">BYSETPOS Rule Notes</a></li><li><a href="#WeekStart">WKST Rule Notes</a></li><li><a href="#InvalidDates">Duplicate and Invalid Dates</a></li><li><a href="#Examples">Working Examples</a></li></ul></div><h2 id="Overview" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Overview</h2><div id="IDBABSection"><p>The following table maps the recurrence rule (<span class="code">RRULE</span>) parts to their
corresponding properties in the <a href="e24c178a-122b-5a60-3c03-f14fbbddd52f.htm">Recurrence</a>
class.  Refer to the class properties for more information about their valid values and usage.  Because the
recurrence class is implemented separately from the other calendar classes, it can be used by itself to generate
a single set of recurring date/times without the need of a containing calendar object such as
<a href="79948446-b9cf-61b9-b056-56f375b55e31.htm">VEvent</a>.  If you need
support for multiple recurrence rules, recurrence dates (<span class="code">RDATE</span>), exception rules
(<span class="code">EXRULE</span>), and/or exception dates (<span class="code">EXDATE</span>), you will need to use
the calendar objects to generate the recurrence sets.  See the
<a href="daf824aa-47fd-3183-b62e-3ade889aa3c7.htm">EWSoftware.PDI.Objects</a> and
<a href="884ef7d4-95a5-f088-0d55-32fbfec87e77.htm">EWSoftware.PDI.Properties</a> namespaces for more
information.</p><table class="table is-hoverable"><thead><tr><th><p>RRULE Property</p></th><th><p>EWSoftware.PDI.Recurrence Property</p></th></tr></thead><tr><td><p><span class="code">FREQ</span></p></td><td><p><a href="c6c69cb7-f7aa-9aeb-e3eb-6182724f6ce7.htm">Frequency</a></p></td></tr><tr><td><p><span class="code">INTERVAL</span></p></td><td><p><a href="4979972e-3948-d015-3e44-61875cb20541.htm">Interval</a></p></td></tr><tr><td><p><span class="code">BYMONTH</span></p></td><td><p><a href="fe01fa7c-f54d-ffab-c9ba-bf6626fc2194.htm">ByMonth</a></p></td></tr><tr><td><p><span class="code">BYWEEKNO</span></p></td><td><p><a href="be772371-72f2-ae74-09d5-4dfbed30a8ca.htm">ByWeekNo</a></p></td></tr><tr><td><p><span class="code">BYYEARDAY</span></p></td><td><p><a href="433a8d20-4bbe-62d2-d9b2-3dd6d8ffbf48.htm">ByYearDay</a></p></td></tr><tr><td><p><span class="code">BYMONTHDAY</span></p></td><td><p><a href="d4fa62af-bf7c-78b6-eb2c-183727c14a6b.htm">ByMonthDay</a></p></td></tr><tr><td><p><span class="code">BYDAY</span></p></td><td><p><a href="e5b0c831-273a-5163-05b2-f15a040030d8.htm">ByDay</a></p></td></tr><tr><td><p><span class="code">BYHOUR</span></p></td><td><p><a href="ea7a6a17-6156-5756-27bc-b01e770862e5.htm">ByHour</a></p></td></tr><tr><td><p><span class="code">BYMINUTE</span></p></td><td><p><a href="d793964d-e2df-be21-7ab2-86df08590dbd.htm">ByMinute</a></p></td></tr><tr><td><p><span class="code">BYSECOND</span></p></td><td><p><a href="a35a02ff-2e07-de68-2696-565e6f74089f.htm">BySecond</a></p></td></tr><tr><td><p><span class="code">BYSETPOS</span></p></td><td><p><a href="465bd0b1-8f7b-d4fe-1a7d-a195fe6f50fa.htm">BySetPos</a></p></td></tr><tr><td><p><span class="code">UNTIL</span></p></td><td><p><a href="cc0f614f-8153-4931-32ef-e288e1dda1bd.htm">RecurUntil</a></p></td></tr><tr><td><p><span class="code">COUNT</span></p></td><td><p><a href="793df62f-8496-386b-8d43-5ac34b3b79da.htm">MaximumOccurrences</a></p></td></tr><tr><td><p><span class="code">WKST</span></p></td><td><p><a href="ffe4434a-80cb-175d-20c1-88a973d97368.htm">WeekStart</a></p></td></tr></table><p>The following class properties have no matching recurrence rule parts.</p><ul><li><p>The <a href="64155aae-1bb5-2c4e-5d3d-5f0eda2b73a6.htm">StartDateTime</a>
property is equivalent to the <span class="code">DTSTART</span> property of a calendar object
(<span class="code">VEVENT</span>, <span class="code">VTODO</span>, <span class="code">VJOURNAL</span>).  Set it to
indicate the date and time at which the recurrence starts.  Note that when recurrences are resolved via a
calendar object, the calendar object will set the recurrence start date/time automatically in each of its rules
based on its <span class="code">DTSTART</span> value.</p></li><li><p>The <a href="6e359e2f-a61c-1ed8-d5dc-0afb6ef5f0e1.htm">CanOccurOnHoliday</a>
property is a custom rule that is not defined by the iCalendar specification.  Use this rule extension to filter
out recurrence instances that fall on a defined set of holiday dates.  This rule is applied after all of the
other standard recurrence rule parts have been applied.</p></li><li><p>The <a href="719fae59-37c6-6326-414f-d41d9d922a6c.htm">Holidays</a>
property defines the holiday dates that are used in conjunction with the <span class="code">CanOccurOnHoliday</span>
property.  This property is static and the collection is shared by all instances of the <span class="code">Recurrence</span>
class.</p></li></ul><p>When used separately from the calendar objects, the following <span class="code">Recurrence</span>
class methods can be used to define and generate recurrence instances:</p><ul><li><p>The <a href="22bc1887-a035-5ee4-6e07-28f3b18e6f22.htm">Parse</a>
method can be used to parse recurrence properties from a string in vCalendar basic grammar format or iCalendar
<span class="code">RRULE</span> format.</p></li><li><p><a href="bf0d0958-e77d-a3ae-b4b4-9f67a033e341.htm">RecurDaily</a>,
<a href="111d6c76-878a-34c0-eae4-d4326fa05efb.htm">RecurEveryWeekday</a>,
<a href="6163aca9-3a93-1fde-4587-4cc52f865aca.htm">RecurWeekly</a>,
<a href="437bb5ce-8760-7a9f-75c9-c1d5763ffb3c.htm">RecurMonthly</a>,
and <a href="7b6064ba-e924-cdd9-6ad6-89eedfcfa01d.htm">RecurYearly</a>
can be used to quickly set up common recurrence patterns rather than setting the properties individually.  They
define patterns similar to those that can be defined in Microsoft Outlook.  For finer control over the recurrence
pattern, you can set the individual properties directly.</p></li><li><p><a href="703eccf1-4131-3c81-7d30-c0e9d1483763.htm">AllInstances</a>
can be used to return a collection of date/times that represent all instances generated by the recurrence pattern.</p></li><li><p><a href="6bde0097-c211-dffd-eb1b-dbbc349561da.htm">OccursOn</a>
can be used to see if a specific date/time is generated by the recurrence pattern.</p></li><li><p><a href="c2a62369-e826-5a4e-adc5-dd55efd3e595.htm">InstancesBetween</a>
can be used to return a collection of date/times that represent all instances occurring between two specified
dates/times.</p></li><li><p><a href="a731ea56-ec3b-037a-42aa-2b746f92dc21.htm">NextInstance</a>
can be used to return a single instance of the recurrence that occurs on or after a specified date/time.</p></li><li><p>Although the <span class="code">Recurrence</span> class is not itself a collection and does not
implement the <span class="code">IEnumerable</span> interface, it does provide a type-safe enumerator via the
<a href="6cc76967-5723-6d97-3fd8-7aa69676e173.htm">GetEnumerator</a>
method so that you can use a recurrence object in a <span class="code">foreach</span> loop to enumerate the entire
set of date/times generated by a recurrence pattern.</p></li></ul></div><h2 id="IntervalDuration" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Recurrence Interval and Duration</h2><div id="IDCABSection"><p>The <span class="code">INTERVAL</span> parameter defines the interval between occurrences (i.e. an
interval of 2 on a daily pattern means every other day).  The <span class="code">COUNT</span> and
<span class="code">UNTIL</span> parameters are mutually exclusive and are used to define the duration of the
recurrence pattern.  If <span class="code">COUNT</span> is specified, it defines the number of occurrences that
will be generated.  If <span class="code">UNTIL</span> is defined, it defines the date/time after which no more
instances will be generated.  If neither is defined, the recurrence will continue forever.</p></div><h2 id="FreqRuleInt" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Frequency and Rule Part Interactions</h2><div id="IDDABSection"><p>Below is a chart summarizing the effect of each recurrence rule part when used with the different
recurrence frequencies.  The iCalendar 2.0 specification is rather vague about the interactions of some of the
rules when used together on the <span class="code">YEARLY</span> frequency.  It is likely that some combinations
of frequency and rules are either not valid or do not make sense.  However, the recurrence class will handle them
as best it can based on examples given in the specification.  The <span class="code">SECONDLY</span> through
<span class="code">WEEKLY</span> frequencies are fairly straightforward.  Rule parts representing units of time
smaller than the frequency expand the number of instances generated. Rule parts representing units of time larger
than or equal to the frequency filter the number of instances generated.  The <span class="code">MONTHLY</span>
and <span class="code">YEARLY</span> frequencies have some distinct variations and are explained in the sections
below.  For all frequencies, if a rule part is omitted, the corresponding value is take from the
<span class="code">StartDate</span> (<span class="code">DTSTART</span>) property. For example, if no
<span class="code">BYHOUR</span> rule is specified, the hour for all instances generated is defaulted to the hour
specified in <span class="code">StartDate</span> (<span class="code">DTSTART</span>).</p><p>The order of evaluation for the rule parts is from left to right. <span class="code">BYWEEKNO</span>
is only used by the <span class="code">YEARLY</span> frequency.  The <span class="code">BYSETPOS</span> rule, not shown
in the table, always filters the results for all frequencies and is always evaluated last.</p><table class="table is-hoverable"><thead><tr><th><p> </p></th><th><p><span class="code">BYMONTH</span></p></th><th><p><span class="code">BYWEEKNO</span></p></th><th><p><span class="code">BYYEARDAY</span></p></th><th><p><span class="code">BYMONTHDAY</span></p></th><th><p><span class="code">BYDAY</span></p></th><th><p><span class="code">BYHOUR</span></p></th><th><p><span class="code">BYMINUTE</span></p></th><th><p><span class="code">BYSECOND</span></p></th></tr></thead><tr><td><p><span class="code">SECONDLY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td></tr><tr><td><p><span class="code">MINUTELY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Expand</p></td></tr><tr><td><p><span class="code">HOURLY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Expand</p></td><td><p>Expand</p></td></tr><tr><td><p><span class="code">DAILY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td></tr><tr><td><p><span class="code">WEEKLY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Filter</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td></tr><tr><td><p><span class="code">MONTHLY</span></p></td><td><p>Filter</p></td><td><p>N/A</p></td><td><p>Filter</p></td><td><p>Expand</p></td><td><p>Expand/Filter</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td></tr><tr><td><p><span class="code">YEARLY</span></p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand/Filter</p></td><td><p>Expand/Filter</p></td><td><p>Expand</p></td><td><p>Expand</p></td><td><p>Expand</p></td></tr></table></div><h2 id="MonthlyFreq" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>MONTHLY Frequency Notes</h2><div id="IDEABSection"><p>If the <span class="code">BYMONTHDAY</span> and <span class="code">BYDAY</span> rules are specified
together, the recurrence is expanded using <span class="code">BYMONTHDAY</span> and then filtered using
<span class="code">BYDAY</span>.  If only one or the other of those rules is present, the recurrence is expanded
by that rule.</p><p>Examples from the iCalendar 2.0 specification (RFC 2445).  The "<span class="code">r</span>"
variable is an instance of the <span class="code">Recurrence</span> class:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">Every other month on the 1st and last Sunday of the month for 10 occurrences:

    DTSTART:19970907T090000
    RRULE:FREQ=MONTHLY;INTERVAL=2;COUNT=10;BYDAY=1SU,-1SU

    r.StartDateTime = new DateTime(1997, 9, 7, 9, 0, 0);
    r.Frequency = RecurFrequency.Monthly;
    r.Interval = 2;
    r.MaximumOccurrences = 10;
    r.ByDay.AddRange(new DayInstance[] { new DayInstance(1, DayOfWeek.Sunday),
        new DayInstance(-1, DayOfWeek.Sunday) });

    ==&gt; (1997 9:00 AM) September 7, 28; November 2, 30
        (1998 9:00 AM) January 4, 25; March 1, 29; May 3, 31

Monthly on the 2nd and 15th of the month for 10 occurrences:

    DTSTART:19970902T090000
    RRULE:FREQ=MONTHLY;COUNT=10;BYMONTHDAY=2,15

    r.StartDateTime = new DateTime(1997, 9, 2, 9, 0, 0);
    r.Frequency = RecurFrequency.Monthly;
    r.MaximumOccurrences = 10;
    r.ByMonthDay.AddRange(new int[] { 2, 15 });

    ==&gt; (1997 9:00 AM) September 2, 15; October 2, 15; November 2, 15; December 2, 15
        (1998 9:00 AM) January 2, 15

Every Friday the 13th, forever.  Here, BYDAY is used to filter the BYMONTHDAY
rule rather than expand the frequency:

    DTSTART:19970902T090000
    RRULE:FREQ=MONTHLY;BYDAY=FR;BYMONTHDAY=13

    r.StartDateTime = new DateTime(1997, 9, 2, 9, 0, 0);
    r.Frequency = RecurFrequency.Monthly;
    r.ByDay.Add(DayOfWeek.Friday);
    r.ByMonthDay.Add(13);

    ==&gt; (1998 9:00 AM) February 13; March 13; November 13
        (1999 9:00 AM) August 13
        (2000 9:00 AM) October 13</code></pre></div></div></div><h2 id="YearlyFreq" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>YEARLY Frequency Notes</h2><div id="IDFABSection"><p>For the <span class="code">YEARLY</span> frequency, the <span class="code">BYMONTH</span>,
<span class="code">BYWEEKNO</span>, and <span class="code">BYYEARDAY</span> rules are expanded separately from each
other if specified.</p><p>If the <span class="code">BYMONTH</span> rule is specified, the following occurs.  If the
<span class="code">BYMONTHDAY</span> and <span class="code">BYDAY</span> rules are specified together, the
<span class="code">BYMONTH</span> recurrence set is expanded using <span class="code">BYMONTHDAY</span> and then
filtered using <span class="code">BYDAY</span>.  If only one or the other of those rules is present, the
recurrence set is expanded by that rule.  If the <span class="code">BYDAY</span> rule is used as an expansion, the
recurrence instances are expanded only in the months specified in the <span class="code">BYMONTH</span> rule.</p><p>If the <span class="code">BYMONTH</span> rule is not specified, the following occurs.  The
recurrence is expanded separately using the <span class="code">BYMONTHDAY</span> rule if it is specified.  If the
<span class="code">BYDAY</span> rule has been specified and the <span class="code">BYWEEKNO</span> rule has not
been specified, the recurrence is expanded separately using the <span class="code">BYDAY</span> rule.</p><p>If the <span class="code">BYWEEKNO</span> rule has been specified, it is expanded separately.  If
the <span class="code">BYDAY</span> rule has been specified in conjunction with the <span class="code">BYWEEKNO</span>
rule, its recurrence set is expanded by the specified days of the week in the those week numbers.</p><p>If <span class="code">BYYEARDAY</span> is specified, it is expanded separately.</p><p>Once all of the above expansions have taken place, each of the separate result sets is combined
into a single set and it is expanded by the <span class="code">BYHOUR</span>, <span class="code">BYMINUTE</span>,
and <span class="code">BYSECOND</span> rules if they are specified.</p><p>Examples from the iCalendar 2.0 specification (RFC 2445).  The "<span class="code">r</span>"
variable is an instance of the <span class="code">Recurrence</span> class:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">Every day in January, for 3 years:

    DTSTART:19980101T090000
    RRULE:FREQ=YEARLY;UNTIL=20000131T090000Z;BYMONTH=1;
    BYDAY=SU,MO,TU,WE,TH,FR,SA

    r.StartDateTime = new DateTime(1998, 1, 1, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.RecurUntil = new DateTime(2000, 1, 31, 9, 0, 0);
    r.ByMonth.Add(1);

    ==&gt; (1998 9:00 AM) January 1-31
        (1999 9:00 AM) January 1-31
        (2000 9:00 AM) January 1-31

Yearly in June and July for 10 occurrences:

    DTSTART:19970610T090000
    RRULE:FREQ=YEARLY;COUNT=10;BYMONTH=6,7

    r.StartDateTime = new DateTime(1997, 6, 10, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.MaximumOccurrences = 10;
    r.ByMonth.AddRange(new int[] { 6, 7 });

    ==&gt; (1997 9:00 AM) June 10; July 10
        (1998 9:00 AM) June 10; July 10
        (1999 9:00 AM) June 10; July 10
        (2000 9:00 AM) June 10; July 10
        (2001 9:00 AM) June 10; July 10

    Note: Since none of the BYDAY, BYMONTHDAY or BYYEARDAY components are specified,
    the day of the month (10) is taken from DTSTART.

Every other year on January, February, and March for 10 occurrences:

    DTSTART:19970310T090000
    RRULE:FREQ=YEARLY;INTERVAL=2;COUNT=10;BYMONTH=1,2,3

    r.StartDateTime = new DateTime(1997, 3, 10, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.Interval = 2;
    r.MaximumOccurrences = 10;
    r.ByMonth.AddRange(new int[] { 1, 2, 3 });

    ==&gt; (1997 9:00 AM) March 10
        (1999 9:00 AM) January 10; February 10; March 10
        (2001 9:00 AM) January 10; February 10; March 10
        (2003 9:00 AM) January 10; February 10; March 10

Every 3rd year on the 1st, 100th and 200th day for 10 occurrences:

    DTSTART:19970101T090000
    RRULE:FREQ=YEARLY;INTERVAL=3;COUNT=10;BYYEARDAY=1,100,200

    r.StartDateTime = new DateTime(1997, 1, 1, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.Interval = 3;
    r.MaximumOccurrences = 10;
    r.ByYearDay.AddRange(new int[] { 1, 100, 200 });

    ==&gt; (1997 9:00 AM) January 1; April 10; July 19
        (2000 9:00 AM) January 1; April 9; July 18
        (2003 9:00 AM) January 1; April 10; July 19
        (2006 9:00 AM) January 1

Every 20th Monday of the year, forever:

    DTSTART:19970519T090000
    RRULE:FREQ=YEARLY;BYDAY=20MO

    r.StartDateTime = new DateTime(1997, 5, 19, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.ByDay.Add(20, DayOfWeek.Monday);

    ==&gt; (1997 9:00 AM) May 19
        (1998 9:00 AM) May 18
        (1999 9:00 AM) May 17
        ...

Monday of week number 20 (where the default start of the week is Monday), forever:

    DTSTART:19970512T090000
    RRULE:FREQ=YEARLY;BYWEEKNO=20;BYDAY=MO

    r.StartDateTime = new DateTime(1997, 5, 12, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.ByWeekNo.Add(20);
    r.ByDay.Add(DayOfWeek.Monday);

    ==&gt; (1997 9:00 AM) May 12
        (1998 9:00 AM) May 11
        (1999 9:00 AM) May 17
        ...

Every Thursday in March, forever:

    DTSTART:19970313T090000
    RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=TH

    r.StartDateTime = new DateTime(1997, 3, 13, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.ByMonth.Add(3);
    r.ByDay.Add(DayOfWeek.Thursday);

    ==&gt; (1997 9:00 AM) March 13, 20, 27
        (1998 9:00 AM) March 5, 12, 19, 26
        (1999 9:00 AM) March 4, 11, 18, 25
        ...

Every Thursday, but only during June, July, and August, forever:

    DTSTART:19970605T090000
    RRULE:FREQ=YEARLY;BYDAY=TH;BYMONTH=6,7,8

    r.StartDateTime = new DateTime(1997, 6, 5, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.ByMonth.AddRange(new int[] { 6, 7, 8 });
    r.ByDay.Add(DayOfWeek.Thursday);

    ==&gt; (1997 9:00 AM) June 5, 12, 19, 26; July 3, 10, 17, 24, 31; August 7, 14, 21, 28
        (1998 9:00 AM) June 4, 11, 18, 25; July 2, 9, 16, 23, 30; August 6, 13, 20, 27
        (1999 9:00 AM) June 3, 10, 17, 24; July 1, 8, 15, 22, 29; August 5, 12, 19, 26
        ...

Every four years, the first Tuesday after a Monday in November, forever (U.S. Presidential
Election day):

    DTSTART:19961105T090000
    RRULE:FREQ=YEARLY;INTERVAL=4;BYMONTH=11;BYDAY=TU;BYMONTHDAY=2,3,4,5,6,7,8

    r.StartDateTime = new DateTime(1996, 11, 5, 9, 0, 0);
    r.Frequency = RecurFrequency.Yearly;
    r.Interval = 4;
    r.ByMonth.Add(11);
    r.ByDay.Add(DayOfWeek.Tuesday);
    r.ByMonthDay.AddRange(new int[] { 2, 3, 4, 5, 6, 7, 8 });

    ==&gt; (1996 9:00 AM) November 5
        (2000 9:00 AM) November 7
        (2004 9:00 AM) November 2
        ...</code></pre></div></div></div><h2 id="BySetPos" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>BYSETPOS Rule Notes</h2><div id="IDGABSection"><p>Once a recurrence has been expanded, the <span class="code">BYSETPOS</span> rule is used to select
specific instances from the set if it is specified.  This occurs at each interval.  For example:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">The 2nd to last weekday of the month:

    DTSTART:19970929T090000
    RRULE:FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-2

    r.StartDateTime = new DateTime(1997, 9, 29, 9, 0, 0);
    r.Frequency = RecurFrequency.Monthly;
    r.BySetPos.Add(-2);
    r.ByDay.AddRange(new DayOfWeek[] { DayOfWeek.Monday, DayOfWeek.Tuesday,
        DayOfWeek.Wednesday, DayOfWeek.Thursday, DayOfWeek.Friday });

    ==&gt; (1997 9:00 AM) September 29; October 30; November 27; December 30
        (1998 9:00 AM) January 29; February 26; March 30
        ...</code></pre></div></div></div><h2 id="WeekStart" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>WKST Rule Notes</h2><div id="IDHABSection"><p>For recurrence rules, a week is defined as a seven day period that starts on the day specified by
the <span class="code">WKST</span> rule part.  Week number one of the calendar year is the first seven day period
starting on the specified day of the week that contains at least four (4) days in that calendar year.</p><p>Valid values for <span class="code">WKST</span> are <span class="code">MO</span>, <span class="code">TU</span>,
<span class="code">WE</span>, <span class="code">TH</span>, <span class="code">FR</span>, <span class="code">SA</span>
and <span class="code">SU</span>.  The default value is <span class="code">MO</span> (Monday).  This is significant
when a <span class="code">WEEKLY</span> recurrence has an interval greater than one and a <span class="code">BYDAY</span>
rule part is specified.  It is also significant in a <span class="code">YEARLY</span> recurrence when a
<span class="code">BYWEEKNO</span> rule part is specified.</p><p>Examples from the iCalendar 2.0 specification (RFC 2445):</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">An example where the days generated makes a difference because of WKST:

    DTSTART:19970805T090000
    RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=MO

    // Uses default week start of Monday
    r.StartDateTime = new DateTime(1997, 8, 5, 9, 0, 0);
    r.Frequency = RecurFrequency.Weekly;
    r.Interval = 2;
    r.MaximumOccurrences = 4;
    r.ByDay.AddRange(new DayOfWeek[] { DayOfWeek.Tuesday, DayOfWeek.Sunday });

    ==&gt; (1997)Aug 5, 10, 19, 24

Changing only WKST from MO to SU, yields different results:

    DTSTART:19970805T090000
    RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=SU

    r.StartDateTime = new DateTime(1997, 8, 5, 9, 0, 0);
    r.Frequency = RecurFrequency.Weekly;
    r.Interval = 2;
    r.MaximumOccurrences = 4;
    r.WeekStart = DayOfWeek.Sunday;
    r.ByDay.AddRange(new DayOfWeek[] { DayOfWeek.Tuesday, DayOfWeek.Sunday });

    ==&gt; (1997)August 5, 17, 19, 31</code></pre></div></div><p>When using Monday as the starting date, the first week is August 4th (Monday) to August 10th
(Sunday).  As such, it picks August 5th and August 10th, skips two weeks and picks up August 19th and August 24th
and stops as it has its four days.</p><p>When using Sunday as the starting date, the first week is August 3rd (Sunday) to August 9th
(Saturday).  Since the pattern starts on August 5th (Tuesday), it won't pick up August 3rd as it is before the
pattern start date.  It then skips two weeks and picks up August 17th and August 19th, skips another two weeks
and picks up August 31st and stops as it has its four days.</p></div><h2 id="InvalidDates" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Duplicate and Invalid Dates</h2><div id="IDIABSection"><p>During the course of generating instances, duplicate and/or invalid date/times may be encountered.
Such instances are discarded and will not become part of the final recurrence set.  The returned set will only
include unique occurrences of valid date/time values.  For example, the following monthly recurrence pattern will
not generate instances for months with less than 31 days:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle"> </span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-plaintext">The 31st day of every month:

    DTSTART:20041016T000000
    RRULE:FREQ=MONTHLY;COUNT=20;BYMONTHDAY=31

    r.StartDateTime = new DateTime(2004, 10, 16);
    r.Frequency = RecurFrequency.Monthly;
    r.MaximumOccurrences = 20;
    r.ByMonthDay.Add(31);

    ==&gt; 10/31/2004, 12/31/2004, 01/31/2004, 03/31/2004, ...</code></pre></div></div></div><h2 id="Examples" class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Working Examples</h2><div id="IDJABSection"><p>See the <em>RFC2445RecurTest</em> demo application for many examples of setting up and
using the <span class="code">Recurrence</span> class in code.  The demo shows using the <span class="code">Recurrence</span>
class by itself as well as in conjunction with the calendar classes with full time zone support.  The Windows
Forms demo application (<em>PDIWinFormsTest</em>) also contains some test forms that show examples of
parsing and calculating recurrence patterns from iCalendar properties.  In addition, it also demonstrates the
<a href="f73aa036-f839-92c4-8939-a936924d60a3.htm">RecurrencePattern</a>
user control and the <a href="73b72b62-8f5b-8208-352c-c953a4cf7283.htm">RecurrencePropertiesDlg</a>
dialog box that can be used to modify recurrence properties in a more user-friendly fashion.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Other Resources</h4><div><a href="695cc5b6-0937-42cd-9e7a-2f8aab4f09b0.htm">Usage Notes</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Overview</a></li><li><a class="quickLink">Recurrence Interval and Duration</a></li><li><a class="quickLink">Frequency and Rule Part Interactions</a></li><li><a class="quickLink">MONTHLY Frequency Notes</a></li><li><a class="quickLink">YEARLY Frequency Notes</a></li><li><a class="quickLink">BYSETPOS Rule Notes</a></li><li><a class="quickLink">WKST Rule Notes</a></li><li><a class="quickLink">Duplicate and Invalid Dates</a></li><li><a class="quickLink">Working Examples</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p><a href="https://github.com/EWSoftware/PDI" target="_blank" rel="noopener noreferrer">[v2021.11.23.0] Copyright © 2003-2021, Eric Woodruff, All Rights Reserved</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:Eric%40EWoodruff.us?Subject=EWSoftware.PDI%20Namespace%20Documentation">Eric@EWoodruff.us</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        </script> 
				</div><div class="column"><script type="text/javascript">
    function _dmBootstrap(file) {
        var _dma = document.createElement('script');
        _dma.type = 'text/javascript';
        _dma.async = true;
        _dma.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + file;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(_dma);
    }
    function _dmFollowup(file) { if (typeof DMAds === 'undefined') _dmBootstrap('cdn2.DeveloperMedia.com/a.min.js'); }
    (function () { _dmBootstrap('cdn1.DeveloperMedia.com/a.min.js'); setTimeout(_dmFollowup, 2000); })();
</script>
<div data-type="ad" data-publisher="ewsoftware.github.io" data-format="728x90" data-zone="PDI"></div>
 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>